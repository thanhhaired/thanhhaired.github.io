{"laborator_custom_css":"\/* ===========================================================\r\nCustom modification only for AUTOMOTIVE Demo - START\r\n=========================================================== *\/\r\n\/* Header: Background Color *\/\r\nheader.main-header {\r\n\tbackground: #FFF;\r\n}\r\n\r\n\/* Header: Menu Buy Button *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main div.menu > ul > li.special-button > a, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main ul.menu > li.special-button > a {\r\n\tcolor: #d90707;\r\n\tborder: 1px solid #d90707;\r\n\tpadding: 0px 3px;\r\n\tborder-radius: 3px;\r\n}\r\n\r\n\/* Header: Menu Buy Button on Hover *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main div.menu > ul > li.special-button > a:hover, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main ul.menu > li.special-button > a:hover {\r\n\tcolor: #FFF;\r\n\tbackground: #d90707;\r\n}\r\n\r\n\/* Header: Menu Item Spacing *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul>li+li, \r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu>li+li{\r\n\tmargin-left: 30px;\r\n}\r\n\r\n\/* Header: Current Menu Item Underline *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container ul li.current-menu-item>a:after,\r\n.main-header.menu-type-standard-menu .standard-menu-container ul li.current_page_parent>a:after {\r\n\tbackground: #d90707 !important;\r\n\tdisplay: block;\r\n\theight: 2px;\r\n\tborder: none;\r\n\twidth: 100%;\r\n}\r\n\r\n\/* Header: Submenu Border Radius *\/\r\n.sub-menu {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Header: Menu Buy Button *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main div.menu > ul > li.buy > a, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main ul.menu > li.buy > a {\r\n\tcolor: #d90707;\r\n\tborder: 1px solid #d90707;\r\n\tpadding: 0px 3px;\r\n\tborder-radius: 3px;\r\n}\r\n\r\n\/* Header: Menu Buy Button on Hover *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main div.menu > ul > li.buy > a:hover, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main ul.menu > li.buy > a:hover {\r\n\tcolor: #FFF;\r\n\tbackground: #d90707;\r\n}\r\n\r\n\/* Header: Menu Item Spacing *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul>li+li, \r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu>li+li{\r\n\tmargin-left: 30px;\r\n}\r\n\r\n\/* Text: Bold Text Color *\/\r\nb, strong {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* Text: Link Hover Color *\/\r\n.site-footer a:hover, \r\n.blog-posts .post-item .post-details .post-title a:hover,\r\n.single-post .post .post-meta a:hover,\r\n.wrapper a:hover,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container .blog-post-title a:hover,\r\nbody a:hover {\r\n\tcolor: #D90707;\r\n}\r\n\r\n\/* General: Border Radius *\/\r\n.radius {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* General: Box Shadow *\/\r\n.box-shadow {\r\n\t-webkit-box-shadow: 0px 0px 70px rgba(0,0,0,0.1), 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 0px 70px rgba(0,0,0,0.1), 0px 5px 5px -5px rgba(0,0,0,.1);\r\n}\r\n\r\n\/* General: Page Title Banner Spacing *\/\r\n.page-title-banner {\r\n\tpadding: 25px 0;\r\n}\r\n\r\n\/* General: Remove iframe Border *\/\r\niframe {\r\n\tborder: none;\r\n}\r\n\r\n\/* General: Hide Underline *\/\r\n.site-footer a:after, \r\n.wrapper a:after {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* General: Background Color *\/\r\n.woocommerce .wrapper,\r\n.blog .wrapper,\r\n.archive .wrapper,\r\n.single-post .wrapper {\r\n\tbackground: #f3f1f1;\r\n}\r\n\r\n\/* General: Heading Top Spacing *\/\r\n.page-heading {\r\n\tmargin-top: 40px;\r\n}\r\n\r\n\/* Forms: Background Color and Border Radius *\/\r\n.labeled-input-row,\r\n.labeled-textarea-row {\r\n\tpadding: 3px 14px;\r\n\tbackground: #EEE;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Forms: Button *\/\r\n.button {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Forms: Reset Borders *\/\r\n.labeled-input-row label,\r\n.labeled-input-row input, \r\n.labeled-textarea-row label {\r\n\tborder-bottom: none;\r\n}\r\n\r\n\/* Forms: Reset Style *\/\r\n.labeled-textarea-row textarea {\r\n\tpadding-top: 0px;\r\n\tline-height: 1.5;\r\n\tbackground-image: none;\r\n}\r\n\r\n\/* Homepage: Client Logo Width *\/\r\n.how-it-works-images img {\r\n\tmax-width: 128px;\r\n}\r\n\r\n\/* Homepage: Client Logo Width *\/\r\n.client-logo img {\r\n\twidth: 50%;\r\n}\r\n\r\n\/* Homepage: Client Logo Spacing *\/\r\n.client-logo img {\r\n\tpadding: 20px 0;\r\n}\r\n\r\n\/* Homepage: Blog Posts Remove Border *\/\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry {\r\n\tborder: none;\r\n}\r\n\r\n\/* Homepage: Blog Show More Button Remove Margin *\/\r\n.show-more {\r\n\tmargin-top: 0px;\r\n}\r\n\r\n\/* Homepage: Blog Show More Button Style *\/\r\n.show-more .reveal-button {\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbackground: #FFF;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\tborder: none;\r\n}\r\n\r\n\/* Homepage: Car Filter Reset Styling *\/\r\n.home .prdctfltr_wc.prdctfltr_wc_regular {\r\n\tpadding: 0px !important;\r\n\t-webkit-box-shadow: none;\r\n\tbox-shadow: none;\r\n}\r\n\r\n\/* Homepage: Car Filter Border Radius *\/\r\n.home .prdctfltr_wc.prdctfltr_woocommerce.pf_select .prdctfltr_filter .prdctfltr_regular_title {\r\n\tborder-radius: 3px !important;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Homepage: Car Filter Container Width *\/\r\n.parent--homepage-car-selector {\r\n\tz-index: 99999 !important;\r\n}\r\n\r\n\/* Homepage: Car Filter Container Width *\/\r\n.homepage-car-selector {\r\n\toverflow: visible !important;\r\n}\r\n\r\n\/* Homepage: Car Filter Box Shadow *\/\r\n.homepage-filter {\r\n\tmargin-top: -70px;\r\n\tbackground: #FFF;\r\n\tpadding: 10px 20px;\r\n\t-webkit-box-shadow: 0px 0px 70px rgba(0,0,0,0.1), 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 0px 70px rgba(0,0,0,0.1), 0px 5px 5px -5px rgba(0,0,0,.1);\r\n}\r\n\r\n\/* Homepage: Car Filter Box Shadow *\/\r\n.homepage-filter .vc_column-inner {\r\n\tpadding-top: 0px !important;\r\n}\r\n\r\n\/* Homepage: Car Filter Button Position *\/\r\n.homepage-filter .prdctfltr_wc .prdctfltr_buttons {\r\n\tposition: absolute;\r\n\ttop: -100px;\r\n\tright: 0 ;\r\n}\r\n\r\n\/* Homepage: Steps *\/\r\n.homepage-steps {\r\n \tpadding: 50px 0px 35px 0px;\r\n}\r\n\r\n\/* Homepage: Electric Car Icon Size *\/\r\n.electric-icon {\r\n\twidth: 64px;\r\n\tmax-width: 64px;\r\n\tdisplay: block;\r\n\tfloat: left;\r\n}\r\n\r\n\/* Homepage: Electric Car Icon Size for Image *\/\r\n.electric-icon img {\r\n\twidth: 64px;\r\n\tmax-width: 64px;\r\n}\r\n\r\n\/* Homepage: Blog Posts More Link *\/\r\n.more-link {\r\n\tborder: none;\r\n\tposition: absolute;\r\n\ttop: 0px;\r\n\tright: 0px;\r\n\tmin-width: auto;\r\n}\r\n\r\n\/* About: Carousel Rounded *\/\r\n.carousel-rounded .wpb_wrapper .vc_images_carousel .vc_item img {\r\n\tborder-radius: 3px !important;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\toverflow: hidden;\r\n}\r\n\r\n\/* Blog: Post *\/\r\n.blog-posts .has-post-thumbnail .post-item {\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\t\t\r\n\tbackground: #FFF;\r\n\tborder-bottom-left-radius: 3px;\r\n\tborder-bottom-right-radius: 3px;\r\n\t-webkit-transition: all 0.3s ease;\r\n\ttransition: all 0.3s ease;\r\n}\r\n\r\n\/* Blog: Post Remove Format Icon *\/\r\n.blog-posts .post-item .post-thumbnail .post-format-icon {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: Post Hover Color Distanced *\/\r\n.blog-posts .post-item .post-thumbnail .post-hover,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-image a .hover-display {\r\n\tbackground-color: rgba(255,255,255,0.85);\r\n}\r\n\r\n\/* Blog: Post Hover Color Distanced *\/\r\n.blog-posts .post-item .post-thumbnail .post-hover.post-hover--distanced,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-image a .image-placeholder,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-image a .hover-display.with-spacing {\r\n\tbackground-color: rgba(255,255,255,0.85);\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Blog: Post Hover Color Full Cover No Opacity *\/\r\n.blog-posts .post-item .post-thumbnail .post-hover.post-hover--no-opacity,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-image a .hover-display.no-opacity {\r\n\tbackground-color: rgba(255,255,255,1);\r\n}\r\n\r\n\/* Blog: Square Posts Layout No Thumbnail*\/\r\n.blog-posts .post-item.template-square.columned .post-details {\r\n\tpadding: 20px 25px 0 25px;\r\n}\r\n\r\n\/* Blog: Square Posts Layout *\/\r\n.blog-posts .format-video .post-item.template-square.columned .post-details,\r\n.blog-posts .has-post-thumbnail .post-item.template-square.columned .post-details {\r\n\tpadding: 20px 25px 0 0;\r\n}\r\n\r\n\/* Blog: Square Posts Meta Layout *\/\r\n.blog-posts .post-item.template-square.columned .post-details .post-meta {\r\n\tdisplay: inline-block;\r\n\tmargin-right: 20px\r\n}\r\n\r\n\/* Blog: Rounded Posts Layout *\/\r\n.blog-posts .post-item.template-rounded.columned {\r\n\tbackground: transparent;\r\n\t-webkit-box-shadow: none;\r\n\tbox-shadow: none;\r\n}\r\n\r\n\/* Blog: Rounded Posts Layout Hover *\/\r\n.blog-posts .post-item.template-rounded.columned {\r\n\tbackground: transparent;\r\n\t-webkit-box-shadow: none;\r\n\tbox-shadow: none;\r\n}\r\n\r\n\/* Blog: Rounded Posts Layout Hover *\/\r\n.blog-posts .post-item.template-rounded .post-thumbnail .post-hover {\r\n\tborder-radius: 50%;\r\n\t-moz-border-radius: 50%;\r\n\t-webkit-border-radius: 50%;\r\n}\r\n\r\n\/* Blog: Rouneded Posts Meta Layout *\/\r\n.blog-posts .post-item.template-rounded.columned .post-meta {\r\n\tdisplay: inline-block;\r\n\tmargin-right: 20px;\r\n}\r\n\r\n\/* Blog Post: Comment Styling *\/\r\n.single-post .post-comments--list .comment {\r\n\tbackground: #FFF;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tpadding: 25px;\r\n\tmargin: 10px 0;\r\n}\r\n\r\n\/* Blog Post: Comment In Reply to Color *\/\r\n.single-post .post-comments--list .comment .commenter-details .in-reply-to span {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* Blog Post: Comments Spacing *\/\r\n.single-post .post-comments {\r\n\tpadding: 20px 0;\r\n\tbackground: transparent;\r\n}\r\n\r\n\/* Blog Post: Comments Reply Spacing and Remove Background *\/\r\n.single-post .post-comments--list .comment-respond {\r\n\tpadding: 0px;\t\r\n\tbackground: none;\r\n}\r\n\r\n\/* Blog Post: Comments Remove Border *\/\r\n.single-post .post-comments:before {\r\n\tborder: none;\r\n}\r\n\r\n\/* Blog Post: Comments Reply Title Bottom Spacing *\/\r\n.single-post .post-comments--list .comment-respond .comment-reply-title {\r\n\tbottom: 20px\r\n}\r\n\r\n\/* Blog Post: Comments Name Color *\/\r\n.single-post .post-comments--list .comment .commenter-details .name a {\r\n\tcolor: #D90706;\r\n}\r\n\r\n\/* Blog Post: Comments Last Child Remove Spacing *\/\r\n.single-post .post-comments--list .comment .commenter-details .comment-text p:last-child {\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Blog Post: Tags Styling *\/\r\n.widget.widget_tag_cloud a,\r\n.single-post .post .post-tags a {\r\n\tcolor: #FFF;\r\n\tbackground: #d90c0e;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Blog Post: Tags Styling on Hover *\/\r\n.widget.widget_tag_cloud a:hover,\r\n.single-post .post .post-tags a:hover {\r\n\tbackground: #222;\r\n\tcolor: #FFF;\r\n}\r\n\r\n\/* Blog: Post *\/\r\n.blog-posts .post-item,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry {\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\t\t\r\n\tbackground: #FFF;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\t-webkit-transition: all 0.3s ease;\r\n\ttransition: all 0.3s ease;\r\n}\r\n\r\n\/* Blog: Post Details Border *\/\r\n.blog-posts .post-item.template-standard .post-details, \r\n.blog-posts .post-item.template-standard .post-thumbnail {\t\r\n\tborder: 0px;\r\n}\r\n\r\n\/* Blog: Post Border Radius *\/\r\n.blog-posts .post-item.template-standard .post-details,\r\n.blog-posts .post-item.template-standard .post-thumbnail,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-image {\r\n\toverflow: hidden;\t\r\n\tborder-top-left-radius: 3px;\r\n\tborder-top-right-radius: 3px;\r\n}\r\n\r\n\/* Blog: Post Border Radius Classic *\/\r\n.blog--has-sidebar .blog-posts .post-item.columned .post-thumbnail {\r\n\tborder-top-left-radius: 3px;\r\n\tborder-bottom-left-radius: 3px;\r\n\toverflow: hidden;\r\n}\r\n\r\n\/* Blog Post: Link Color *\/\r\n.single-post .post-formatting a {\r\n\tcolor: #d90707;\r\n}\r\n\r\n\/* Blog Post: Top Spacing *\/\r\n.single-post .single-post {\r\n\tpadding-top: 35px;\r\n}\r\n\/* Car: Product Meta Tags *\/\r\n.woocommerce .single-product .summary .product_meta>span {\r\n\tpadding: 7px 0;\r\n\ttext-transform: uppercase;\r\n\tfont-size: 12px;\r\n\tborder-top: 1px dotted #CCC;\r\n}\r\n\r\n\/* Car: Price Spacing Top and Bottom *\/\r\n.woocommerce .single-product .summary>.price {\r\n\tmargin: 20px 0;\r\n}\r\n\r\n\/* Car: Variable Product Label *\/\r\n.woocommerce .single-product .summary .variations .label label {\r\n\ttext-transform: uppercase;\r\n\tfont-size: 12px;\r\n}\r\n\r\n\/* Car: Variable Product Color*\/\r\n.woocommerce .single-product .select-option-ui {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* Car: Quantity Width*\/\r\n.woocommerce .item-info .group_table .quantity, \r\n.woocommerce .item-info form.cart .quantity {\r\n\twidth: 60px\r\n}\r\n\r\n\/* Car: Image Border Radius *\/\r\n.post-content.post-formatting img {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Car: Remove Bottom Spacing *\/\r\n.single-product .woocommerce.page-container {\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Car: Remove Bottom Spacing *\/\r\n.woocommerce .single-product .product {\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Car: Video Border Radius *\/\r\n.post-content.post-formatting .video-as-holder.enabled .video-aspect-ratio+*, \r\n.post-content.post-formatting .video-as-holder.enabled .video-js, \r\n.post-content.post-formatting .video-as-holder.enabled iframe {\r\n\toverflow: hidden;\r\n\tborder-radius: 3px !important;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Car: Sidebar Car Category Spacing *\/\r\n.prdctfltr_wc .prdctfltr_terms_customized.prdctfltr_terms_customized_image-text .prdctfltr_checkboxes label {\r\n\tmargin: 15px 0;\r\n}\r\n\r\n\/* Car: Sidebar Car Category Car Size *\/\r\n.prdctfltr_wc .prdctfltr_terms_customized.prdctfltr_terms_customized_image-text .prdctfltr_customize_block .prdctfltr_customize_image_text {\r\n\twidth: 65px;\r\n}\r\n\r\n\/* Car: Sidebar Car Category Car Size *\/\r\n.prdctfltr_wc .prdctfltr_terms_customized.prdctfltr_terms_customized_image-text .prdctfltr_customize_block .prdctfltr_customize_image_text img {\r\n\tborder: none;\r\n\twidth: 65px;\r\n}\r\n\r\n\/* Car: Sidebar Car Category Active *\/\r\n.prdctfltr_wc .prdctfltr_terms_customized.prdctfltr_terms_customized_image-text label.prdctfltr_active .prdctfltr_customize_block .prdctfltr_customize_image_text img {\r\n\topacity: 0.35;\r\n}\r\n\r\n\/* Car: Sidebar Categories Selected *\/\r\n.prdctfltr_wc .prdctfltr_terms_customized.prdctfltr_terms_customized_image-text .prdctfltr_add_scroll.prdctfltr_down label.prdctfltr_active .prdctfltr_customize_block .prdctfltr_customize_image_text img {\r\n\topacity: 1;\r\n}\r\n\r\n\/* Car: Sidebar Categories Not Selected *\/\r\n.prdctfltr_wc .prdctfltr_terms_customized.prdctfltr_terms_customized_image-text .prdctfltr_add_scroll.prdctfltr_down label .prdctfltr_customize_block .prdctfltr_customize_image_text img {\r\n\topacity: 0.35;\r\n}\r\n\r\n\/* Car: Sidebar Brands Selected *\/\r\n.prdctfltr_wc .prdctfltr_terms_customized_image .prdctfltr_add_scroll.prdctfltr_down .prdctfltr_checkboxes label .prdctfltr_customize_image img {\r\n\topacity: 0.35;\r\n}\r\n\r\n\/* Car: Attributes Link Color *\/\r\n.shop_attributes a {\r\n\tcolor: #666;\r\n}\r\n\r\n\/* Car: Attributes Link Color on Hover *\/\r\n.shop_attributes a:hover {\r\n\tcolor: #d80707;\r\n\ttext-decoration: underline;\r\n}\r\n\r\n\/* Car: Attributes - Hide title *\/\r\n.woocommerce .woocommerce-tabs .entry-content h2 {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Car: Attributes - Feature color *\/\r\n.shop_attributes th {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* Car: Attributes - Table styling *\/\r\n.shop_attributes td,\r\n.shop_attributes th {\r\n\tpadding: 10px 0px;\r\n}\r\n\r\n\/* Car: Attributes - Table styling *\/\r\n.shop_attributes tr {\r\n\tborder-bottom: 1px solid #DDD;\r\n}\r\n\r\n\/* Car: Attributes - Hide border for last feature *\/\r\n.shop_attributes tr:last-child {\r\n\tborder-bottom: none;\r\n}\r\n\r\n\/* Car: Addition Info - Remove Top Margin *\/\r\n.shop_attributes {\r\n\tmargin-top: 0px !important;\r\n}\r\n\r\n\/* Car: Tabs styling *\/\r\n.woocommerce .woocommerce-tabs .entry-content {\r\n\tbackground: #FFF;\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\t\/*padding-left: 0px;*\/\r\n\t\/*padding-right: 0px;*\/\r\n}\r\n\r\n\/* Car: Tabs styling *\/\r\n.woocommerce .woocommerce-tabs .tabs li {\r\n\tbackground: transparent;\r\n\ttop: 0;\r\n\tmargin-right: 0px;\r\n\tborder-bottom: 0px;\r\n\tborder-right: 0px;\r\n}\r\n\r\n\/* Car: Tabs Active Tab *\/\r\n.woocommerce .woocommerce-tabs .tabs li.active {\r\n\tbackground: #FFF;\r\n\tborder-bottom-color: #FFF;\r\n}\r\n\r\n\/* Car: Car Box *\/\r\n.woocommerce .products .product.catalog-layout-default .item-info {\r\n\tbackground: #FFF;\r\n\tpadding: 15px 20px;\r\n\tmargin:0px;\r\n\tborder-bottom-left-radius: 3px;\r\n\tborder-bottom-right-radius: 3px;\r\n\t-webkit-transition: all 0.3s ease;\r\n\ttransition: all 0.3s ease;\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n}\r\n\r\n\/* Car: Car Box Hover *\/\r\n.woocommerce .products .product.catalog-layout-default:hover .item-info {\r\n\t-webkit-box-shadow: 0 10px 30px -10px rgba(171, 171, 171, 0.9);\r\n\tbox-shadow: 0 10px 30px -10px rgba(171, 171, 171, 0.9);\r\n}\r\n\r\n\/* Car: Car Box Image Radius *\/\r\n.woocommerce .products .product.catalog-layout-default .product-images img {\r\n\tborder-top-left-radius: 3px;\r\n\tborder-top-right-radius: 3px;\r\n}\r\n\r\n\/* Car: Car Box Image Radius *\/\r\n.woocommerce .products .product.catalog-layout-default .product-images .image-placeholder {\r\n\tborder-top-left-radius: 3px;\r\n\tborder-top-right-radius: 3px;\r\n}\r\n\r\n\/* Car: Gallery Previous Border Radius *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .main-product-images .nextprev-arrow {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Car: Gallery Image height *\/\r\n.woocommerce .single-product-images .kalium-woocommerce-product-gallery a img {\r\n\theight: auto;\r\n}\r\n\r\n\/* Car: Gallery Next-Prev Arrow Icon Color and Size *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .main-product-images .nextprev-arrow i, \r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .thumbnails .nextprev-arrow i {\r\n\tcolor: #FFF !important;\r\n\tfont-size: 54px;\r\n}\r\n\r\n\/* Car: Content Styling *\/\r\n.woocommerce .product.catalog-layout-default .item-info {\r\n\tpadding: 30px 45px;\r\n\tbackground: #FFF;\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tmargin: 0px;\r\n\tborder-bottom-left-radius: 3px;\r\n\t-webkit-border-bottom-left-radius: 3px;\r\n\t-moz-border-bottom-left-radius: 3px;\r\n\tborder-bottom-right-radius: 3px;\r\n\t-webkit-border-bottom-right-radius: 3px;\r\n\t-moz-border-bottom-right-radius: 3px;\r\n}\r\n\r\n\/* Car: Content Styling *\/\r\n.woocommerce .product.catalog-layout-default .summary.entry-summary.item-info,\r\n.woocommerce .single-product .summary {\r\n\tpadding: 30px 45px;\r\n\tbackground: #FFF;\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tmargin: 0px;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Car: Tabs Styling Active Tab *\/\r\n.woocommerce .woocommerce-tabs .tabs li.active {\r\n\tborder-top-left-radius: 3px;\r\n\tborder-top-right-radius: 3px;\r\n}\r\n\r\n\/* Car: Reviews *\/\r\n.woocommerce .woocommerce-Reviews #review_form_wrapper {\r\n\tbackground: transparent;\r\n\tmargin: 0px;\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Car: Car Price for Smaller Devices *\/\r\n@media screen and (max-width: 768px) {\r\n\t.woocommerce .product.catalog-layout-default .item-info .item-info-row>.price-column {\r\n\t\tmargin-top: 0px;\r\n\t}\r\n}\r\n\r\n\/* Price area: Mobile *\/\r\n@media screen and (max-width: 768px) {\r\n\t.woocommerce .product.catalog-layout-default .item-info .item-info-row>.price-column, \r\n\t.woocommerce .product.catalog-layout-default .item-info .item-info-row>.title-column {\r\n\t\twidth: auto;\r\n\t}\r\n}\r\n\r\n\/* Car: Category *\/\r\n.woocommerce .shop-categories .product-category a {\r\n\tbackground: #fff !important;\r\n\t-webkit-box-shadow: 0 7px 10px -10px rgba(171, 171, 171, 0.7);\r\n\tbox-shadow: 0 7px 10px -10px rgba(171, 171, 171, 0.7);\r\n\t-webkit-transition: all 0.55s ease;\r\n\ttransition: all 0.55s ease;\r\n\tpadding: 25px 15px 10px 15px; \r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Car: Category *\/\r\n.woocommerce .shop-categories .product-category a:hover {\r\n\t-webkit-transform: translateY(-5px);\r\n\ttransform: translateY(-5px);\r\n\t-webkit-box-shadow: 0 10px 20px -10px rgba(171, 171, 171, 0.9);\r\n\tbox-shadow: 0 10px 20px -10px rgba(171, 171, 171, 0.9);\r\n}\r\n\r\n\/* Car: Category Title *\/\r\n.woocommerce .shop-categories .product-category .woocommerce-loop-category__title, \r\n.woocommerce .shop-categories .product-category h3 {\r\n\ttransform: none;\r\n\tbackground: none;\r\n\tpadding: 0;\r\n\tposition: relative;\r\n\ttransform: none;\r\n\tbackground: none;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tpadding-top: 15px;\r\n}\r\n\r\n\/* Car: Car Price *\/\r\n.woocommerce .product.catalog-layout-default .item-info .item-info-row>.price-column {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 15px;\r\n\tpadding: 3px 6px 3px 10px;\r\n\tborder-top-left-radius: 3px;\r\n\tborder-bottom-right-radius: 3px;\r\n\tbackground: #000;\r\n}\r\n\r\n\/* Car: Car Default Layout Margin Bottom *\/\r\n.woocommerce .product.catalog-layout-default {\r\n\tmargin-bottom: 30px;\r\n}\r\n\r\n\/* Car: Car Price skew area *\/\r\n.woocommerce .product.catalog-layout-default .item-info .item-info-row>.price-column:after {\r\n\tposition: absolute;\r\n\tcontent: '';\r\n\tdisplay: block;\r\n\ttop: 0;\r\n\tright: -5px;\r\n\theight: 100%;\r\n\twidth: 10px;\r\n\tbackground-color: #000;\r\n\t-webkit-transform: skew(-14deg,0deg);\r\n\ttransform: skew(-14deg,0deg);\r\n}\r\n\r\n\/* Car: Car Price Text Color *\/\r\n.woocommerce .product.catalog-layout-default .item-info .item-info-row>.price-column span {\r\n\tcolor: #FFF;\r\n}\r\n\r\n\/* Car: Car Price Remove Spacing *\/\r\n.woocommerce .product.catalog-layout-default .item-info .price del {\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Car: Car Price Remove Spacing and Set Color *\/\r\n.woocommerce .product.catalog-layout-default .item-info .price del span {\r\n\tmargin: 0px !important;\r\n\tcolor: #666 !important;\r\n}\r\n\r\n\/* Car: Car Price Remove Border *\/\r\n.woocommerce .product.catalog-layout-default .item-info .price ins, \r\n.woocommerce .product.catalog-layout-default .item-info .price>.amount {\r\n\tborder-bottom: none;\r\n}\r\n\r\n\/* Car: Sale, Out of Stock and Featured Button *\/\r\n.woocommerce .product .onsale, \r\n.woocommerce .product .onsale.oos, \r\n.woocommerce .product .onsale.featured {\r\n\tline-height: normal !important;\r\n\theight: auto;\r\n\twidth: auto;\r\n\tpadding: 2px 4px;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\t-webkit-transform: skew(-10deg);\r\n\ttransform: skew(-10deg); \r\n\ttop: -8px;\r\n\tright: 5px;\r\n\t-webkit-box-shadow: -2px 3px 10px rgba(0,0,0,0.2);\r\n\tbox-shadow: -2px 3px 10px rgba(0,0,0,0.2);\r\n}\r\n\r\n\/* Car: Gallery Border Radius *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery a img {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Car: Review Styling *\/\r\n.woocommerce .woocommerce-Reviews #comments .commentlist .comment, \r\n.woocommerce .woocommerce-Reviews #comments .commentlist .review {\r\n\tposition: relative;\r\n\tborder-bottom: 1px solid #EEE;\r\n\tpadding: 30px 0;\r\n\tclear: both;\r\n}\r\n\r\n\/* Cars: Gallery Next Border Radius *\/\r\n.woocommerce .products .product .product-images .gallery-arrow.gallery-next {\r\n\tborder-top-left-radius: 2px;\r\n\tborder-bottom-left-radius: 2px;\r\n}\r\n\r\n\/* Cars: Gallery Previous Border Radius *\/\r\n.woocommerce .products .product .product-images .gallery-arrow.gallery-prev {\r\n\tborder-top-right-radius: 2px;\r\n\tborder-bottom-right-radius: 2px;\r\n}\r\n\r\n\/* Cars: Gallery Arrow Background Color *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .main-product-images .nextprev-arrow, \r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .thumbnails .nextprev-arrow,\r\n.woocommerce .products .product .product-images .gallery-arrow.gallery-next, \r\n.woocommerce .products .product .product-images .gallery-arrow.gallery-prev {\r\n\tbackground: rgba(0,0,0,.4);\r\n}\r\n\r\n\/* Cars: Gallery Arrow Color *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .main-product-images .nextprev-arrow, \r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .thumbnails .nextprev-arrow,\r\n.woocommerce .products .product .product-images .gallery-arrow.gallery-next, \r\n.woocommerce .products .product .product-images .gallery-arrow.gallery-prev {\r\n\tcolor: #FFF;\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Cars: Gallery Change Next Arrow Icon *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .main-product-images .nextprev-arrow .flaticon-arrow413:before, \r\n.woocommerce .products .product .product-images .gallery-arrow.gallery-next .flaticon-arrow413:before {\r\n\tcontent: \"\\e009\" !important;\r\n}\r\n\r\n\/* Cars: Gallery Change Prev Arrow Icon *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .main-product-images .nextprev-arrow .flaticon-arrow427:before, \r\n.woocommerce .products .product .product-images .gallery-arrow.gallery-prev .flaticon-arrow427:before {\r\n\tcontent: \"\\e007\" !important;\r\n}\r\n\r\n\/* Cars: Distanced Layout Border Radius *\/\r\n.woocommerce .product.catalog-layout-distanced-centered .product-internal-info {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Cars: Remove Background *\/\r\n.woocommerce {\r\n\tbackground: transparent;\r\n}\r\n\r\n\/* Cars: Default Catalog Layout Title Link Color *\/\r\n.woocommerce .product.catalog-layout-default .item-info h3 a {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* Cars: Default Catalog Layout Title Link Hover Color *\/\r\n.woocommerce .product.catalog-layout-default .item-info h3 a:hover {\r\n\tcolor: #d80707;\r\n}\r\n\r\n\/* Cars: Default Catalog Layout Transition *\/\r\n.woocommerce .products .product.catalog-layout-default {\r\n\t-webkit-transition: 0.2s all;\r\n\ttransition: 0.2s all;\r\n}\r\n\r\n\/* Cars: Hide Page Title *\/\r\n.woocommerce-page .page-title {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Cars: Add To Cart Button *\/\r\n.woocommerce .product .item-info .product-loop-add-to-cart-container .product-category.category-hoverable+.add-to-cart-link a {\r\n\tbackground: #EEE;\r\n\tborder-radius: 50px;\r\n\t-webkit-border-radius: 50px;\r\n\t-moz-border-radius: 50px;\r\n\tpadding: 3px 8px;\r\n}\r\n\r\n\/* Cars: Add To Cart Button Added *\/\r\n.woocommerce .product .item-info .product-loop-add-to-cart-container .product-category.category-hoverable+.add-to-cart-link .add_to_cart_button.added {\r\n\tbackground: #2ECC71 !important;\r\n\tcolor: #FFF;\r\n}\r\n\r\n\/* Cars: Minimal and Full Image Layout Padding *\/\r\n.woocommerce .product.catalog-layout-full-bg .product-internal-info,\r\n.woocommerce .product.catalog-layout-transparent-bg .product-internal-info {\r\n\tpadding: 20px 25px;\r\n}\r\n\r\n\/* Cars: Minimal Catalog Layout *\/\r\n.woocommerce .product.catalog-layout-transparent-bg .product-internal-info {\r\n\tpadding: 15px 25px;\r\n\tpadding-top: 0px;\r\n\tbackground: -webkit-gradient(linear, left top, left bottom, color-stop(15%, rgba(238, 238, 238,1)), color-stop(75%, rgba(238, 238, 238,0)));\r\n\tbackground: linear-gradient(to bottom, rgba(238, 238, 238,1) 15%, rgba(238, 238, 238,0) 75%);\r\n\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#00ffffff',GradientType=0 ); \r\n}\r\n\r\n\/* Cars: Images Border Radius *\/\r\n.woocommerce .product.catalog-layout-distanced-centered .product-images,\r\n.woocommerce .product.catalog-layout-transparent-bg .product-images,\r\n.woocommerce .product.catalog-layout-full-bg .product-images {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Cars: Minimal Catalog Layout Spacing *\/\r\n.woocommerce .product.catalog-layout-transparent-bg .item-info .product-bottom-details {\r\n\tbottom: 15px;\r\n\tleft: 25px;\r\n\tright: 25px;\t\r\n}\r\n\r\n\/* Cars: Full Image Layout Spacing *\/\r\n.woocommerce .product.catalog-layout-full-bg .item-info .product-bottom-details {\r\n\tbottom: 20px;\r\n\tleft: 25px;\r\n\tright: 25px;\r\n}\r\n\r\n\/* Sidebar: Box Shadow *\/\r\n.blog-archive--widgets.widget-area--skin-bordered .widget,\r\n.widget-area--skin-background-fill,\r\n.single-post--widgets.widget-area--skin-bordered .widget,\r\n.widget-area--skin-bordered .prdctfltr-widget .prdctfltr_wc .prdctfltr_woocommerce_ordering .prdctfltr_filter {\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n}\r\n\r\n\/* Sidebar: Styling *\/\r\n.blog-archive--widgets.widget-area--skin-background-fill, \r\n.widget-area--skin-bordered .widget,\r\n.widget-area--skin-bordered .prdctfltr-widget .prdctfltr_wc .prdctfltr_woocommerce_ordering .prdctfltr_filter,\r\n.single-post--widgets.widget-area--skin-background-fill {\r\n\tbackground: #FFF;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\tpadding: 20px 25px;\r\n\tmargin-bottom: 25px;\r\n}\r\n\r\n\/* Sidebar: Fill \u2014 Reset Padding and Background *\/\r\n.blog-archive--widgets.widget-area--skin-background-fill .widget,\r\n.single-post--widgets.widget-area--skin-background-fill .widget {\r\n\tpadding: 0px;\r\n\tborder-radius: 0px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\tbackground: none;\r\n}\r\n\r\n\/* Sidebar: Bordered Box Styling *\/\r\n.widget-area--skin-bordered .widget {\r\n\tborder: 0;\r\n}\r\n\r\n\/* Sidebar: Box - When Background Fill option is selected *\/\r\n.widget-area--skin-background-fill .widget {\r\n\tbackground-color: #fff;\r\n}\r\n\r\n\/* Sidebar: Title Reduce Margin Bottom *\/\r\n.widget-area .widget-title, .widget-area .widgettitle {\r\n\tmargin-bottom: 15px;\r\n\tborder-bottom: 1px solid #EEE;\r\n\tpadding-bottom: 15px;\r\n}\r\n\r\n\/* Sidebar: Search Bar *\/\r\n.blog-archive--widgets .widget.widget_search,\r\n.single-post--widgets .widget.widget_search {\r\n\tpadding: 0px !important;\r\n\tbackground: #FFF;\r\n}\r\n\r\n\/* Sidebar: Search Bar *\/\r\n.blog-archive--widgets .widget.widget_search .search-bar input[name=\"s\"],\r\n.single-post--widgets .widget.widget_search .search-bar input[name=\"s\"] {\r\n\tbackground: #FFF;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Cars Sidebar: Hide Check *\/\r\n.prdctfltr_title_added i.prdctfltr-check {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Cars Sidebar: Top Filter *\/\r\n.prdctfltr_topbar {\r\n\tdisplay: inline-block;\r\n}\r\n\r\n\/* Cars Sidebar: Top Title Selected Color *\/\r\nspan.prdctfltr_title_selected {\r\n\tbackground: #EEE;\r\n\tpadding: 3px 6px;\r\n\tmargin-right: 10px;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Cars Sidebar: Top Title Selected Remove Previous Styling *\/\r\nspan.prdctfltr_title_selected:after {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Cars Sidebar: Top Title Selected Remove Next Styling *\/\r\nspan.prdctfltr_title_selected:before{\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Cars Sidebar: Top Title Selected on Hover *\/\r\nspan.prdctfltr_title_selected:hover {\r\n\tbackground: #222;\r\n\tcolor: #FFF;\r\n}\r\n\r\n\/* Cars Sidebar: Top Title Selected Icon Color *\/\r\nspan.prdctfltr_title_selected:hover a.prdctfltr_title_remove i {\r\n\tcolor: #FFF !important;\r\n}\r\n\r\n\/* Cars Sidebar: Slider *\/\r\n.pf_rngstyle_thin .irs-slider {\r\n\tborder-radius: 50%;\r\n\t-webkit-border-radius: 50%;\r\n\t-moz-border-radius: 50%;\r\n\tbackground: #FFF;\r\n\tborder: 2px solid #d80707;\r\n\t-webkit-box-shadow: 0px 1px 4px rgba(0,0,0,.3);\r\n\tbox-shadow: 0px 1px 4px rgba(0,0,0,.3);\r\n}\r\n\r\n\/* Cars Sidebar: Slider *\/\r\n.pf_rngstyle_thin .irs-bar {\r\n\tbackground: #d80707;\r\n\ttop: 39px;\r\n\theight: 3px;\r\n}\r\n\r\n\/* Cars Sidebar: Slider *\/\r\n.pf_rngstyle_thin .irs-line {\r\n\tbackground: #EEE;\r\n\theight: 3px;\r\n\ttop: 39px;\r\n}\r\n\r\n\/* Cars Sidebar: Slider *\/\r\n.pf_rngstyle_thin .irs-from, \r\n.pf_rngstyle_thin .irs-single, \r\n.pf_rngstyle_thin .irs-to {\r\n\tbackground: #d80707;\r\n}\r\n\r\n\/* Cars Sidebar: Remove Bottom Margin *\/\r\n.prdctfltr-widget .prdctfltr_add_scroll {\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Cars Sidebar: Border Radius for Widgets *\/\r\n.products-archive--widgets.widget-area--skin-background-fill .widget {\r\n\tborder-radius: 3px;\t\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Cars Sidebar: Bordered Box Styling *\/\r\n.widget-area--skin-bordered .widget.prdctfltr-widget {\r\n\tbackground: none;\r\n\tborder-radius: 0;\r\n\t-webkit-border-radius: 0;\r\n\t-moz-border-radius: 0;\r\n\tpadding: 0;\r\n\tmargin-bottom: 0;\r\n}\r\n\r\n\/* Cars Sidebar: Remove Padding *\/\r\n.prdctfltr-widget .prdctfltr_wc .prdctfltr_filter_inner {\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Cars Sidebar: Tooltip Position *\/\r\n.prdctfltr_tooltip>span:after {\r\n\tbottom: -16px;\r\n\tmargin-left: -10px;\r\n}\r\n\r\n\/* Cars Sidebar: Tooltip Border Radius and Spacing *\/\r\n.prdctfltr_tooltip>span {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\tpadding: 4px 7px;\r\n}\r\n\r\n\/* Cars Sidebar: Bottom Spacing *\/\r\n.prdctfltr_tooltip {\r\n\tpadding-bottom: 8px;\r\n}\r\n\r\n\/* Cars Sidebar: Checkbox Styling *\/\r\n.prdctfltr_wc.prdctfltr_checkbox .prdctfltr_filter label>span:before {\r\n\twidth: 15px;\r\n\theight: 15px;\r\n\tborder-width: 0px;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\tbackground-color: #eee;\r\n\t-webkit-box-shadow: inset 1px 1px 0px rgba(0, 0, 0, 0.10);\r\n\tbox-shadow: inset 1px 1px 0px rgba(0, 0, 0, 0.10);\r\n\tmargin: 6px 12px 6px 0;\r\n}\r\n\r\n\/* Cars Sidebar: Remove Checkbox Styling for Active *\/\r\n.prdctfltr_wc.prdctfltr_checkbox .prdctfltr_filter label.prdctfltr_active>span:after {\r\n\tmargin: 3px 1px 1px 1px;\r\n\tline-height: normal; \r\n}\r\n\r\n\/* Cars Sidebar: Checkbox Selected Background Color *\/\r\n.prdctfltr_filter label.prdctfltr_active>span:before {\r\n\tbackground-color: #1ac744 !important;\r\n}\r\n\r\n\/* Cars Sidebar: Checkbox Selected Tick Color *\/\r\n.prdctfltr_wc.prdctfltr_checkbox .prdctfltr_filter label.prdctfltr_active>span:after {\r\n\tcolor: #fff;\r\n}\r\n\r\n\/* Cars Sidebar: Image Checkboxes Default *\/\r\n.homepage-car-selector .prdctfltr_terms_customized img {\r\n\topacity: 1 !important;\r\n}\r\n\r\n\/* Cars Sidebar: Image and Text Checkboxes Default *\/\r\n.homepage-car-selector .prdctfltr_customize_image_text img {\r\n\topacity: 1 !important;\r\n}\r\n\r\n\/* Cars Sidebar: Checkboxes Spacing *\/\r\n.homepage-car-selector .prdctfltr_customize_block {\r\n\tpadding: 1px;\r\n}\r\n\r\n\/* Cars Sidebar: Image Checkboxes Default *\/\r\n.prdctfltr_wc .prdctfltr_terms_customized_image .prdctfltr_add_scroll.prdctfltr_down .prdctfltr_checkboxes label.prdctfltr_active .prdctfltr_customize_image img {\r\n\topacity: 1;\r\n}\r\n\r\n\/* Cars Sidebar: Colorize options *\/\r\n.prdctfltr_filter label {\r\n\tcolor: #666;\r\n}\r\n\r\n\/* Cars Sidebar: Colorize options - Active state *\/\r\n.prdctfltr_filter label.prdctfltr_active {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* Cars Sidebar: Brands - Remove border *\/\r\n.prdctfltr_customize_block {\r\n\tborder: none;\r\n}\r\n\r\n\/* Cars Sidebar: Brands - Logo size *\/\r\n.prdctfltr_customize_block .prdctfltr_customize_image,\r\n.prdctfltr_customize_block .prdctfltr_customize_image img {\r\n\twidth: 64px;\r\n}\r\n\r\n\/* Cars Sidebar: Brands - Logo Remove Padding from img *\/\r\n.prdctfltr_customize_block .prdctfltr_customize_image img {\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Cars Sidebar: Brands - Logo Spacing *\/\r\n.prdctfltr_customize_block .prdctfltr_customize_image {\r\n\tpadding: 5px;\r\n\tpadding-top: 0px;\r\n}\r\n\r\n\/* Cars Sidebar Remove Spacing *\/\r\n.prdctfltr_customize {\r\n\tmargin: 0px\r\n}\r\n\r\n\/* Cars Sidebar: Brands - Selected brand *\/\r\n.prdctfltr_active .prdctfltr_customize_block {\r\n\tborder: none !important;\r\n\t-webkit-box-shadow: none !important;\r\n\tbox-shadow: none !important;\r\n}\r\n\r\n\/* Cars Sidebar: Colors - Change size *\/\r\n.prdctfltr_customize_block {\r\n\tpadding-top: 0px;\r\n\tpadding-bottom: 0px;\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Cars Sidebar: Colors - Change size *\/\r\n.prdctfltr_customize_block .prdctfltr_customize_color {\r\n\twidth: 29px;\r\n\theight: 29px;\r\n\tborder-radius: 50%;\r\n\t-webkit-border-radius: 50%;\r\n\t-moz-border-radius: 50%;\r\n}\r\n\r\n\/* Cars Sidebar: Colors - White color border *\/\r\n.prdctfltr_ft_white .prdctfltr_customize_block .prdctfltr_customize_color {\r\n\tborder: 1px solid #CCC;\r\n}\r\n\r\n\/* Cars Sidebar: Checkboxes Label Spacing *\/\r\n.prdctfltr_checkboxes label {\r\n\tmargin-bottom: 0px; \r\n}\r\n\r\n\/* Cars Sidebar: Checkboxes Active Styling *\/\r\n.prdctfltr_checkboxes label.prdctfltr_active .prdctfltr_customize_block {\r\n\tpadding-top: 0px; \r\n}\r\n\r\n\/* Cars Sidebar: Checkboxes Label Spacing *\/\r\n.prdctfltr_checkboxes label.prdctfltr_active .prdctfltr_customize_block .prdctfltr_customize_color {\r\n\t-webkit-box-shadow: inset 0 0 0 2px rgba(0,0,0,0.5);\r\n\tbox-shadow: inset 0 0 0 2px rgba(0,0,0,0.5);\r\n}\r\n\r\n\/* Cars Sidebar: Show More Button Remove Styling *\/\r\n.prdctfltr_checkboxes .pf_more span:before {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Cars Sidebar: Show More Button Remove Text Styling *\/\r\n.prdctfltr_checkboxes .pf_more span {\r\n\ttext-transform: none;\r\n\tcolor: #666;\r\n}\r\n\r\n\/* Cars Sidebar: Show More Button New Style *\/\r\n.prdctfltr_checkboxes .pf_more {\r\n\tborder-top: 1px dotted #CCC;\r\n\tpadding-top: 8px;\r\n\tmargin-top: 8px;\r\n}\r\n\r\n\/* Cars Sidebar: Show Less Icon *\/\r\n.prdctfltr_checkboxes .pf_more.pf_activated span:after {\r\n\t-webkit-transform: rotate(-90deg);\r\n\ttransform: rotate(-90deg);\r\n}\r\n\r\n\/* Cars Sidebar: Show More Icon *\/\r\n.prdctfltr_checkboxes .pf_more span:after {\r\n\tcontent: \"\u00bb\";\r\n\tdisplay: inline-block;\r\n\t-webkit-transform: rotate(90deg);\r\n\ttransform: rotate(90deg);\r\n\tmargin-left: 10px;\r\n}\r\n\r\n\/* Cars Sidebar: Top Filter *\/\r\n.prdctfltr_wc.prdctfltr_wc_regular {\r\n\tbackground: #fff !important;\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tpadding: 5px 25px;\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Cars Sidebar: Top Filter Bottom Spacing *\/\r\n.woocommerce .woocommerce-shop-header--columned {\r\n\tmargin-bottom: 35px;\r\n}\r\n\r\n\/* Cars Sidebar: Top Filter Display Flex *\/\r\n.woocommerce .woocommerce-shop-header--columned>div {\r\n\t-webkit-box-flex: 1;\r\n\t-ms-flex-positive: 1;\r\n\tflex-grow: 1;\r\n\twidth: 100%;\r\n}\r\n\r\n\/* Cars Sidebar: Top Filter Title Spacing *\/\r\n.prdctfltr_wc .prdctfltr_filter_title {\r\n\tmargin-top: 10px;\r\n\tmargin-bottom: 10px;\r\n}\r\n\r\n\/* Blog Post: Content Side Padding *\/\r\n.single-post.single-post--has-sidebar .post {\r\n\tpadding: 0 15px;\r\n}\r\n\r\n\/* Blog Post: Content Background *\/\r\n.single-post .post--column {\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbackground: #FFF;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\tpadding: 25px 30px;\r\n}\r\n\r\n\/* Blog Post: Next\/Prev Top Padding *\/\r\n.single-post .post .post-navigation {\r\n\tpadding-top: 30px;\r\n}\r\n\r\n\/* Blog Post: Next\/Prev Top Padding *\/\r\n.single-post .comment-form>p.labeled-textarea-row,\r\n.single-post .comment-form>p.labeled-input-row {\r\n\tbackground: #FFF;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\t-webkit-box-shadow: 0px 5px 5px -5px rgba(0,0,0,.1);\r\n\tbox-shadow: 0px 5px 5px -5px rgba(0,0,0,.1); \r\n}\r\n\r\n\/* Blog Post: Comment Form Width *\/ \r\np.labeled-input-row.comment-form-author, p.labeled-input-row.comment-form-email {\r\n\tmargin-right: 2%;\r\n}\t\r\n\r\n\/* Blog Post: Comment Form No Margin *\/ \r\n.single-post .comment-form {\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Blog Post: Comment Inputs Width *\/\r\n.single-post .comment-form>p.labeled-input-row {\r\n\twidth: 32%;\r\n\tpadding: 3px 14px;\r\n\tpadding-left: 20px;\r\n}\r\n\r\n\/* Blog Post: Comment Input Remove Border Bottom *\/\r\n.single-post .comment-form>p.labeled-input-row input {\r\n\tborder-bottom: none;\r\n}\r\n\r\n\/* Blog Post: Comment Textarea *\/\r\n.single-post .comment-form>p.labeled-textarea-row textarea {\r\n\tbackground: transparent;\r\n\tpadding: 0px 20px;\r\n\tline-height: 1.5;\r\n}\r\n\r\n\/* Blog Post: Comment Input Label Color *\/\r\n.single-post .comment-form>p.labeled-input-row label {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* Blog Post: Comment Paragraph Remove Padding *\/\r\n.single-post .comment-form>p {\r\n\tpadding: 0;\r\n}\r\n\r\n\/* Blog Post: Comment Paragraph Remove Top Padding for Logged in Users *\/\r\n.single-post .comment-form>p.logged-in-as {\r\n\tmargin-top: 0px;\r\n}\r\n\r\n\/* Blog Post: Comment Label Padding *\/\r\n.single-post .comment-form-comment label {\r\n\tpadding: 15px 20px;\r\n}\r\n\r\n\/* Blog Post: Comment Submit Button Remove Top Margin *\/\r\n.single-post .comment-form>p.form-submit {\r\n\tmargin-top: 0px\r\n}\r\n\r\n\/* Blog Post: Image Margin *\/\r\n.single-post .post--full-width-image .post-image {\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Blog Post: Image Border Radius *\/\r\n.single-post .post-image a {\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\toverflow: hidden;\r\n}\r\n\r\n\/* Blog Post: Author Info Spacing and Border *\/\r\n.single-post .post .post-author {\r\n\tpadding-top: 25px;\r\n\tborder-top: 1px solid #EEE;\r\n}\r\n\r\n\/* Blog Post: Author Info Name Display Inline *\/\r\n.single-post .post .author-info--details .author-name em {\r\n\tdisplay: inline-block;\r\n}\r\n\r\n\/* Blog Post: Author Info Remove Bottom Spacing *\/\r\n.author-info--alignment-bottom.single-post--has-author-info.single-post .post .post-author .author-info {\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Blog Post: Sharing Social Networks *\/\r\n.single-post .post .post-share-networks {\r\n\tborder-top: 1px solid #EEE;\r\n\tpadding: 15px 0;\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Blog Post: Sharing Social Networks Line Height *\/\r\n.single-post .post .post-share-networks .networks-list, \r\n.single-post .post .post-share-networks .share-title {\r\n\tline-height:0;\r\n}\r\n\r\n\/* Blog Post: Sharing Social Networks Icon Size *\/\r\n.single-post .post .post-share-networks--style-icons a {\r\n\twidth: 35px;\r\n\theight: 35px;\r\n}\r\n\r\n\/* Blog Post: Comment Reply Connector *\/\r\n.single-post .post-comments--list .comment .commenter-image .comment-connector {\r\n\tborder: 5px solid #fff;\r\n\tborder-right: 0;\r\n\tborder-top: 0;\r\n}\r\n\r\n\/* Footer: Other Widgets Width *\/\r\n.widget-area.widgets--columned-layout.widgets--columns-5>.widget {\r\n\twidth: 25%;\r\n}\r\n\r\n\/* Footer: First Widget Width *\/\r\n.widget-area.widgets--columned-layout.widgets--columns-5>.widget.widget_text:first-child {\r\n\twidth: 50%;\r\n\tpadding-right: 50px;\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Services: Carousel Navigation *\/\r\n.vc_images_carousel .vc_carousel-indicators li {\r\n\tborder: 2px solid #FFF !important;\r\n\tbackground-color: transparent !important;\r\n}\r\n\r\n\/* Services: Carousel Navigation *\/\r\n.vc_images_carousel .vc_carousel-indicators .vc_active {\r\n\tborder: 2px solid #FFF !important;\r\n\tbackground-color: #FFF !important;\r\n}\r\n\r\n\/* Services: Title Display *\/\r\n.service-title {\r\n\tdisplay: inline-block;\r\n}\r\n\r\n\/* Services: Title Underline *\/\r\n.service-title:after {\r\n\theight: 2px !important;\r\n\twidth: 100% !important;\r\n\tdisplay:block;\r\n\tbackground: #DD1F26;\r\n\tcontent: \"\";\r\n\tmargin-top: -3px;\r\n}\r\n\r\n\/* Services: Service Block on Landscape Phone *\/\r\n@media screen and (min-width: 468px) and (max-width: 768px) {\r\n\t.service-block .vc_col-sm-6 {\r\n\t\twidth: 50%;\r\n\t} \r\n}\r\n\r\n\/* Contact: Icons *\/\r\n.contact-icons {\r\n\tpadding: 25px 0;\r\n}\r\n\r\n.contact-form .button strong {\r\n    color: #fff;\r\n}\r\n\r\n\/* Footer: Top and Bottom Spacing *\/\r\n.site-footer .footer-widgets {\r\n\tmargin: 50px 0;\r\n}\r\n\r\n\/* Footer: Widget Titles *\/\r\n.site-footer .footer-widgets .widget .widgettitle {\r\n\tmargin: 0px;\r\n\tborder: none;\r\n\tpadding-bottom: 5px;\r\n}\r\n\r\n\/* Footer: Widget Titles Spacing *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu {\r\n\tmargin: 15px 0;\r\n} \r\n\r\n\/* Footer: Widget List Spacing *\/\r\n.site-footer .footer-widgets .widget ul li {\r\n\tpadding: 3px 0;\r\n}\r\n\r\n\/* Footer: Widget List Link Color *\/\r\n.site-footer.site-footer-inverted .footer-widgets .widget a{\r\n\tcolor: #AAA;\r\n}\r\n\r\n\/* Footer: Background *\/\r\nfooter.site-footer-inverted {\r\n\tbackground: url(\"https:\/\/demo-content.kaliumtheme.com\/automotive\/wp-content\/uploads\/2017\/11\/tire-trace-1.png\") bottom right no-repeat;\r\n\tbackground-color: #1F1F1F !important;\r\n}\r\n\r\n\/* Footer: Working Hours Bottom Border *\/\r\n.main-footer .footer-widgets .widget .working-hours li {\r\n\tborder-bottom: 1px dotted rgba(255,255,255,0.1);\r\n\tpadding: 8px 0;\r\n}\r\n\r\n\/* Footer: Working Hours - Open *\/\r\n.main-footer .footer-widgets .widget .working-hours li span {\r\n\tfloat: right;\r\n\tbackground: #DD1F26;\r\n\tcolor: #FFF;\r\n\tpadding: 2px 6px;\r\n\tclear: both;\r\n\tborder-radius: 3px;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n}\r\n\r\n\/* Footer: Working Hours - Closed *\/\r\n.main-footer .footer-widgets .widget .working-hours li span.closed {\r\n\tbackground: #3e3e3e;\r\n}\r\n\r\n\/* Footer: Widgets Left Spacing *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu:nth-child(2n+2) {\r\n\tpadding-left:80px;\r\n}\r\n\r\n\/* Footer: Widgets Paragraph Color *\/\r\n.site-footer.site-footer-inverted .footer-widgets .widget p {\r\n\tcolor: #999;\r\n}\r\n\r\n\/* Footer: Widgets Link Hover Color *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu ul li a:hover {\r\n\tcolor: #FFF !important;\r\n}\r\n\r\n\/* Footer: Widgets Link Hover Underline *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu ul li a:hover:after {\r\n\theight: 1px !important;\r\n\twidth: 100% !important;\r\n\tdisplay: block;\r\n\tbackground: #DD1F26;\r\n\tcontent: \"\";\r\n}\r\n\r\n\/* Footer: Bottom Footer Spacing *\/\r\n.site-footer.footer-bottom-horizontal .footer-bottom-content {\r\n\tpadding: 20px 0; \r\n}\r\n\r\n\/* Footer: Bottom Footer Social Networks Remove Background *\/\r\n.site-footer .social-networks.rounded li a {\r\n\tbackground: transparent;\r\n}\r\n\r\n\/* Footer: Bottom Footer Background Color *\/\r\nfooter.site-footer-inverted .footer-bottom { \r\n\tbackground-color: #222;\r\n}\r\n\r\n\/* Footer: Bottom Footer Hide Border *\/\r\nfooter.site-footer-inverted hr {\r\n\tdisplay: none;\r\n}\r\n\r\nhtml input:-webkit-autofill {\r\n    -webkit-box-shadow: 0 0 0 1000px #eee inset;\r\n    box-shadow: 0 0 0 1000px #eee inset;\r\n}\r\n\/* ===========================================================\r\nCustom modification only for AUTOMOTIVE Demo - END\r\n=========================================================== *\/\r\n\r\n\/* ===========================================================\r\nUser CSS modifications\r\n=========================================================== *\/\r\n.example {\r\n \tcolor: red !important;\r\n}","laborator_custom_css_lg":"","laborator_custom_css_md":"\/* Homepage: Car Filter:  *\/\r\n.homepage-car-selector {\r\n\tmargin-top: 0px !important;\r\n}\r\n\r\n\/* Homepage: Car Filter *\/\r\n.homepage-filter {\r\n\tborder-radius: 0;\r\n\t-moz-border-radius: 0;\r\n\t-webkit-border-radius: 0;\r\n}","laborator_custom_css_sm":"\/* Homepage: Car Filter:  *\/\r\n.homepage-car-selector {\r\n\tmargin-top: 0px !important;\r\n}\r\n\r\n\/* Homepage: Car Filter *\/\r\n.homepage-filter {\r\n\tborder-radius: 0;\r\n\t-moz-border-radius: 0;\r\n\t-webkit-border-radius: 0;\r\n}","laborator_custom_css_xs":"\/* About: Team Images *\/\r\n.team-image img {\r\n\twidth: 100%;\r\n}\r\n\r\n\/* Homepage: Client Logos Width *\/\r\n.logos-holder .client-logos-col {\r\n\twidth: 33.33333% !important;\r\n}\r\n\r\n\/* Homepage: Car Filter: *\/\r\n.homepage-car-selector {\r\n\tmargin-top: 0px\r\n}\r\n\r\n\/* Homepage: Car Filter Button Position *\/\r\n.homepage-filter .prdctfltr_wc .prdctfltr_buttons {\r\n\tposition: relative;\r\n\ttop: auto;\r\n\tright: auto;\r\n\twidth: 100%;\r\n}\r\n\r\n\/* Homepage: Car Filter *\/\r\n.homepage-filter .prdctfltr_wc .prdctfltr_buttons a.button.prdctfltr_woocommerce_filter_submit {\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n}\r\n\r\n\/* Homepage: Car Filter *\/\r\n.homepage-filter {\r\n\tpadding: 0px;\r\n\tborder-radius: 0;\r\n\t-moz-border-radius: 0;\r\n\t-webkit-border-radius: 0;\r\n}\r\n\r\n\/* Homepage: Car Filter Title Bottom Margin *\/\r\n.homepage-filter .section-title {\r\n\tmargin-bottom: 20px;\r\n}\r\n\r\n\/* Homepage: Blog Posts More Link *\/\r\n.more-link {\r\n\tposition: relative;\r\n\ttop: 0px;\r\n\tright: 0px;\r\n\tmin-width: auto;\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Homepage: Blog Posts More Link *\/\r\n.show-more .reveal-button {\r\n\twidth: 100%;\r\n}\r\n\r\n\/* Homepage: Blog Posts More Link *\/\r\n.show-more {\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Homepage: Remove Bottom Spacing From Posts *\/\r\n.wpb_wrapper .lab-blog-posts .blog-post-column {\r\n\tmargin-bottom: 20px;\r\n}\r\n\r\n\/* Homepage: Steps *\/\r\n.homepage-steps {\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Contact: Icons *\/\r\n.contact-icons {\r\n\tpadding: 0;\r\n}\r\n\r\n\/* Contact: Contact Form Spacing *\/\r\n.contact-row.vc_row-has-fill>.vc_column_container>.vc_column-inner {\r\n\tpadding-top: 15px;\r\n}\r\n\r\n\/* Contact: Contact Form Spacing *\/\r\n.wpb_wrapper .lab-contact-form {\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Contact: Submit Button *\/\r\n.contact-form .button {\r\n\twidth: 100%;\r\n}\r\n\r\n\/* Footer: Other Widgets Width *\/\r\n.widget-area.widgets--columned-layout.widgets--columns-5>.widget {\r\n\twidth: 50%;\r\n}\r\n\r\n\/* Footer: First Widget Width *\/\r\n.widget-area.widgets--columned-layout.widgets--columns-5>.widget.widget_text:first-child {\r\n\twidth: 100%;\r\n\tpadding-right: 15px;\r\n\tmargin-bottom: 15px;\r\n}\r\n\r\n\/* Footer: Widgets Left Spacing *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu:nth-child(2n+2) {\r\n\tpadding-left: 15px;\r\n}\r\n\r\n\/* Blog Post: Featured Image Top Spacing *\/\r\n.single-post .single-post {\r\n\tpadding-top: 20px;\r\n}\r\n\r\n\/* Blog Post: Featured Image Bottom Image *\/\r\n.single-post .post-image {\r\n\tmargin-bottom: 20px;\t\r\n}\r\n\r\n\/* Blog Post: Featured Image Bottom Image *\/\r\n.single-post .post .post-meta-only .post-meta {\r\n\tmargin-bottom: 15px;\r\n}\r\n\r\n\/* Blog: Post Spacing *\/\r\n.blog-posts>.loading-posts, .blog-posts>li {\r\n\tmargin-bottom: 20px;\r\n}\r\n\r\n\/* Cars: Car Spacing *\/\r\n.woocommerce .product.catalog-layout-default {\r\n\tmargin-bottom: 20px;\t\r\n}\r\n\r\n\/* Blog Post: Comment Spacing *\/\r\n.contact-form .form-group,\r\n.single-post .comment-form>p.labeled-input-row {\r\n\twidth: 100%;\r\n\tmargin-bottom: 15px;\r\n}\r\n\r\n\/* Blog Post: Comment Spacing *\/\r\n.single-post .post-comments+.post-comment-form .comment-respond {\r\n\tpadding-top: 0px;\r\n}\r\n\r\n\/* Car: Images Spacing *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .thumbnails {\r\n\tmargin-bottom: 20px;\r\n}\r\n\r\n\/* Car: Image Spacing *\/\r\n.single-product .woocommerce.page-container {\r\n\tmargin-top: 20px;\r\n}\r\n\r\n\/* Car: Top Spacing *\/\r\n.woocommerce .woocommerce-tabs {\r\n\tpadding-top: 0px;\r\n}\r\n\r\n\/* Car: Tabs Remove Border *\/\r\n.woocommerce .woocommerce-tabs .tabs {\r\n\tborder: none;\r\n}\r\n\r\n\/* Footer: Top and Bottom Spacing *\/\r\n.site-footer .footer-widgets {\r\n\tmargin: 35px 0;\r\n}","laborator_custom_css_less":"@my-var: #ccc;\n@my-other-var: #fff;\n\n.any-container {\n\t.nested-container {\n\t\tcolor: @my-var;\n\t}\n}","laborator_custom_css_sass":"$color: #abc;\n\ndiv.example-el {\n\tcolor: lighten($color, 20%);\n}"}