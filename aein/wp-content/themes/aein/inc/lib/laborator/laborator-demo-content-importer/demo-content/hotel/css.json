{"laborator_custom_css":"\/* ===========================================================\r\nCustom modification only for HOTEL Demo - START\r\n=========================================================== *\/\r\n\/* General: Title Divider *\/\r\n.title-divider {\r\n\tmargin-top: 15px !important;\r\n\tmargin-bottom: 25px !important;\r\n\twidth: 220px;\r\n\theight: auto;\r\n}\r\n\r\n\/* General: Image Shadow *\/\r\n.image-shadow {\r\n\t-webkit-box-shadow: -20px 15px 90px rgba(0, 0, 0, 0.30);\r\n\tbox-shadow: -20px 15px 90px rgba(0, 0, 0, 0.30);\r\n}\r\n\r\n\/* General: Title Top Margin *\/\r\n.section-title {\r\n\tmargin-top: 40px;\r\n}\r\n\r\n\/* General: Line Height *\/\r\nbody,\r\np {\r\n\tline-height: 1.7;\r\n}\r\n\r\n\/* General: Hide Underline *\/\r\n.site-footer a:after,\r\n.wrapper a:after {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* General: Text Link Hover Color *\/\r\n.site-footer a:hover,\r\n.blog-posts .post-item .post-details .post-title a:hover,\r\n.single-post .post .post-meta a:hover,\r\n.wrapper a:hover,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container .blog-post-title a:hover,\r\nbody a:hover {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* General: Page Heading Spacing *\/\r\n.page-heading {\r\n\tmargin-bottom: 40px;\r\n\tmargin-top: 40px;\r\n}\r\n\r\n\/* General: Page Heading Width *\/\r\n.page-heading--title-section {\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n\tmax-width: 70%;\r\n\ttext-align: center;\r\n\tposition: relative;\r\n\tmargin-bottom: 0;\r\n\tmargin-top: 0;\r\n}\r\n\r\n\/* General: Page Heading Title Margin Bottom *\/\r\n.page-heading--title,\r\n.portfolio-title-holder .pt-column.pt-column-title h1 {\r\n\tmargin-bottom: 15px;\r\n}\r\n\r\n\/* General: Page Heading Description Remove Top Margin *\/\r\n.page-heading--description p~p {\r\n\tmargin-top: 0px;\r\n}\r\n\r\n\/* Header: Menu *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul>li+li,\r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu>li+li {\r\n\tmargin-left: 30px;\r\n}\r\n\r\n\/* Header: Menu Hover Color *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu>li>a:hover {\r\n\tcolor: #c39a2c !important;\r\n}\r\n\r\n\/* Header: Menu Active Item Color *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu>li.current-menu-item>a,\r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu>li.current_page_parent>a,\r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu>li>a:hover {\r\n\tcolor: #c39a2c !important;\r\n}\r\n\r\n\/* Header: Sub Menu Border *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu > ul ul, \r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu ul {\r\n\tbackground-color: #c39a2c !important;\r\n\tbox-shadow: 0px 0px 0px 5px #c39a2c, inset 0px 0px 0px 1px rgba(255,255,255,.5) !important;\r\n}\r\n\r\n\/* Form: Label *\/\r\n.labeled-input-row label,\r\n.labeled-textarea-row label {\r\n\tletter-spacing: 2px;\r\n}\r\n\r\n\/* Homepage: Slider Bullets *\/\r\n.bullet-bar .tp-bullet {\r\n    width: 60px;\r\n    height: 1px;\r\n    background: rgba(255,255,255,0.5);\r\n}\r\n\r\n\/* Homepage: Slider Bullets *\/\r\n.bullet-bar .tp-bullet:hover, \r\n.bullet-bar .tp-bullet.selected {\r\n    background: rgba(255,255,255,1);\r\n}\r\n\r\n\/* Homepage: Intro Row Spacing *\/\r\n.homepage-intro {\r\n\tpadding: 45px 0;\r\n}\r\n\r\n\/* Homepage: Auto Type Text *\/\r\n.home-auto-type h2 {\r\n\tmargin-top: 0px;\r\n}\r\n\r\n\/* Homepage: Service Icons *\/\r\n.service-icons {\r\n\tpadding-top: 35px;\r\n}\r\n\r\n\/* Homepage: Service Icons *\/\r\n.service-icons img {\r\n\theight: 48px;\r\n\twidth: auto;\r\n}\r\n\r\n\/* Homepage: Reviews *\/\r\n.homepage-reviews {\r\n\tpadding-top: 45px;\r\n}\r\n\r\n\/* Homepage: Reviews *\/\r\n.vc_tta-container {\r\n\tmargin-bottom: 0px;\t\r\n}\r\n\r\n\/* Homepage: Reviews *\/\r\n.review-tabs {\r\n\twidth: 60%;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n\/* Homepage: Show more Button *\/\r\n.homepage-events  .show-more {\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Homepage: Blog Posts More Button *\/\r\n.home .show-more .reveal-button {\r\n\tborder: none;\r\n\tletter-spacing: 2px;\r\n}\r\n\r\n\/* Homepage: Blog Posts More Button Color *\/\r\n.home .show-more .reveal-button a {\r\n\tcolor: #000;\r\n\tbox-shadow: 0px 0px 0px 1px rgba(0,0,0,.1), 0px 0px 0px 2px #FFF, 0px 0px 0px 3px rgba(0,0,0,.1);\r\n}\r\n\r\n\/* Homepage: Blog Posts More Button on Hover *\/\r\n.home .show-more .reveal-button a:hover {\r\n\tbox-shadow: 0px 0px 0px 1px rgba(0,0,0,.5), 0px 0px 0px 2px #FFF, 0px 0px 0px 3px rgba(0,0,0,.5);\r\n}\r\n\r\n\/* Homepage: Events Section More Button on Hover *\/\r\n.homepage-events .show-more .reveal-button a {\r\n\tbox-shadow: 0px 0px 0px 1px rgba(0,0,0,.1), 0px 0px 0px 2px #EEE, 0px 0px 0px 3px rgba(0,0,0,.1);\t\r\n}\r\n\r\n\/* Homepage: Events Section More Button on Hover *\/\r\n.homepage-events .show-more .reveal-button a:hover {\r\n\tbox-shadow: 0px 0px 0px 1px rgba(0,0,0,.5), 0px 0px 0px 2px #EEE, 0px 0px 0px 3px rgba(0,0,0,.5);\t\r\n}\r\n\r\n\/* Homepage: Events Section Padding *\/\r\n.homepage-events {\r\n  \tpadding-top: 45px;\r\n  \tpadding-bottom: 30px;\r\n}\r\n\r\n\/* Homepage: Blog Posts Background *\/\r\n.homepage-posts .blog-post-entry .blog-post-content-container {\r\n\tbackground: #FFF;\r\n}\r\n\r\n\/* Homepage: Rooms Spacing *\/\r\n.homepage-rooms {\r\n  padding-top: 45px;\r\n}\r\n\r\n\/* Homepage: Rooms More Link Spacing *\/\r\n.homepage-rooms .wpb_wrapper .lab-portfolio-items .more-link {\r\n  margin-top: 10px;\r\n}\r\n\r\n\/* Homepage: Rooms More Link Spacing *\/\r\n.homepage-rooms .show-more {\r\n  margin: 0px;\r\n}\r\n\r\n\/* Blog: Post Box Spacing *\/\r\n.blog-posts .post-item.template-standard .post-details {\r\n\tpadding: 35px 40px;\r\n}\r\n\r\n\/* Blog: Post Box Animation Transition *\/\r\n.blog-posts .post-item.template-standard {\r\n\t-webkit-transition: all 0.3s;\r\n\t-o-transition: all 0.3s;\r\n\ttransition: all 0.3s;\r\n}\r\n\r\n\/* Blog: Post Box Shadow *\/\r\n.blog-posts .post-item.template-standard:hover {\r\n\t-webkit-box-shadow: 0 5px 20px rgba(0, 0, 0, .06);\r\n\tbox-shadow: 0 5px 20px rgba(0, 0, 0, .06);\r\n}\r\n\r\n\/* Blog: Post Title Underline Removed *\/\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container .blog-post-title a:after,\r\n.blog-posts .post-item .post-details .post-title a:after {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: Post Title Hover *\/\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container .blog-post-title a:hover,\r\n.blog-posts .post-item .post-details .post-title a:hover {\r\n\tcolor: #c39a2c;\r\n}\r\n\r\n\/* Blog: Category and Date Hide Icons *\/\r\n.blog-posts .post-item .post-details .post-meta i {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: Category and Date Letter Spacing *\/\r\n.widget.widget_recent_entries li .post-date,\r\n.woocommerce .woocommerce-Reviews #comments .commentlist .comment-text .meta time,\r\n.single-post .post .post-meta-only .post-meta,\r\n.single-post .post-comments--list .comment .commenter-details .date,\r\n.post-navigation--label em,\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container .blog-post-date,\r\n.blog-posts .post-item .post-details .post-meta {\r\n\tletter-spacing: 2px;\r\n}\r\n\r\n\/* Blog: Category and Date Hide Bottom Margin *\/\r\n.blog-posts .post-item .post-details .post-meta {\r\n\tmargin-bottom: 5px;\r\n}\r\n\r\n\/* Blog: External Post Styling *\/\r\n.post_format-post-format-link .post-details {\r\n\tbackground-color: #f3ede5;\r\n\tborder: none !important;\r\n\tpadding: 30px;\r\n}\r\n\r\n\/* Blog: External Post Box Shadow *\/\r\n.post_format-post-format-link .post-item {\r\n\t-webkit-box-shadow: 0 5px 20px rgba(0, 0, 0, .06);\r\n\tbox-shadow: 0 5px 20px rgba(0, 0, 0, .06);\r\n}\r\n\r\n\/* Blog: External Post Hide Date and Category *\/\r\n.post_format-post-format-link .post-details .post-meta {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: External Post Remove Bottom Spacing *\/\r\n.post_format-post-format-link .post-details .post-excerpt {\r\n\tmargin-bottom: 0px !important;\r\n}\r\n\r\n\/* Blog: External Post Remove Bottom Paragraph Spacing *\/\r\n.post_format-post-format-link .post-details .post-excerpt p {\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Single Blog: Category Link Color *\/\r\n.single-post .post .post-meta a {\r\n\tcolor: #c39a2c;\r\n}\r\n\r\n\/* Single Blog: Hide Category and Date Icons *\/\r\n.single-post .post .post-meta i {\r\n\tline-height: 0;\r\n}\r\n\r\n\/* Blog: Sidebar No Spacing for Custom HTML Widgets *\/\r\n.widget_text.widget.widget_custom_html {\r\n\tpadding: 0px !important;\r\n}\r\n\r\n\/* Blog: Sidebar Search Box *\/\r\n.widget.widget_product_search .search-bar input[name=\"s\"],\r\n.widget.widget_search .search-bar input[name=\"s\"] {\r\n\tbackground: none;\r\n}\r\n\r\n\/* Blog: Sidebar Tag Background Color *\/\r\n.widget-area--skin-background-fill .widget.widget_tag_cloud a {\r\n\tbackground: #FFF;\r\n}\r\n\r\n\/* Accomodation: Title and Description Display *\/\r\n.portfolio-title-holder {\r\n\tdisplay: block;\r\n}\r\n\r\n\/* Accomodation: Title and Description Center *\/\r\n.portfolio-title-holder .pt-column.pt-column-title {\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n\tmax-width: 70%;\r\n\ttext-align: center;\r\n\tposition: relative;\r\n\tmargin-bottom: 40px;\r\n\tpadding-right: 0px;\r\n}\r\n\r\n\/* Accomodation: Filter Center Categories *\/\r\n.portfolio-title-holder .pt-column {\r\n\tmargin: auto;\r\n}\r\n\r\n\/* Accomodation: Filter Text Color *\/\r\n.product-filter ul li.active a {\r\n\tcolor: #c39a2c;\r\n}\r\n\r\n\/* Accomodation: Filter Line Strike Through *\/\r\n.product-filter ul li a:after {\r\n\theight: 2px !important;\r\n\tdisplay: block;\r\n\tbackground: #c39a2c;\r\n\tcontent: \"\";\r\n\twidth: 0%;\r\n\tposition: absolute;\r\n\ttop: 45%;\r\n\tmargin: 0 auto;\r\n\tleft: 0;\r\n\tright: 0;\r\n\t-webkit-transition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n\t-o-transition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n\ttransition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n\topacity: 0.5;\r\n}\r\n\r\n\/* Accomodation: Filter Line Width *\/\r\n.product-filter ul li a:hover:after {\r\n\twidth: 100%;\r\n\topacity: 1;\r\n}\r\n\r\n\/* Accomodation: Filter Line Opacity *\/\r\n.product-filter ul li.active a:after {\r\n\topacity: 1;\r\n}\r\n\r\n\/* Accomodation: Filter Center *\/\r\n.product-filter ul {\r\n\ttext-align: center;\r\n}\r\n\r\n\/* Accomodation: Category Letter Spacing *\/\r\n.portfolio-holder .thumb .hover-state .info p {\r\n\tletter-spacing: 2px;\r\n}\r\n\r\n\/* Accomodation: Category Color on Hover *\/\r\n.portfolio-holder .thumb .hover-state .info p a:hover {\r\n\tcolor: #222;\r\n}\r\n\r\n\/* Room: Features List *\/\r\n.single-portfolio-holder .checklist-entry ul {\r\n\tlist-style-type: none;\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Room: Features List Images *\/\r\n.single-portfolio-holder .checklist-entry img {\r\n\tvertical-align: baseline;\r\n\tmargin-right: 10px;\r\n}\r\n\r\n\/* Room: Buton Styling *\/\r\n.single-portfolio-holder .details .link a {\r\n\tbackground: #c39a2c;\r\n\tpadding: 5px 20px;\r\n\tcolor: #FFF;\r\n}\r\n\r\n\/* Room: Full Screen Arrow*\/\r\n.single-portfolio-holder.portfolio-type-5 .portfolio-description-container .portfolio-description-fullinfo .collapse-project-info {\r\n\tmargin: 0px;\r\n\tvisibility: hidden;\r\n\topacity: 0;\r\n\t-webkit-transition: opacity 0.3s;\r\n\t-o-transition: opacity 0.3s;\r\n\ttransition: opacity 0.3s;\r\n}\r\n\r\n\/* Room: Full Screen Arrow *\/\r\n.single-portfolio-holder.portfolio-type-5 .portfolio-description-container .portfolio-description-fullinfo:hover .collapse-project-info {\r\n\tvisibility: visible;\r\n\topacity: 1;\r\n}\r\n\r\n\/* Dining: Welcome Spacing *\/\r\n.restaurant {\r\n\tpadding: 45px 0;\r\n}\r\n\r\n\/* Dining: Second Row Spacing *\/\r\n.restaurant-row-2 {\r\n\tpadding: 30px 0;\r\n}\r\n\r\n\/* Dining: Menu Spacing *\/\r\n.restaurant-menu {\r\n\tpadding: 0;\r\n\tpadding-top: 35px;\r\n}\r\n\r\n\/* Dining: Menu Title *\/\r\n.restaurant-menu h4 {\r\n\tletter-spacing: 3px;\r\n\tmargin-bottom: 20px;\r\n}\r\n\r\n\/* Dining: Menu Meal Tabs Align Center *\/\r\n.restaurant-menu ul {\r\n\ttext-align: left;\r\n}\r\n\r\n\/* Dining: Menu Meal Tabs Hide Underline *\/\r\n.restaurant-menu li a:after {\r\n\tdisplay: none !important;\r\n}\r\n\r\n\/* Dining: Menu Meal Tabs *\/\r\n.restaurant-menu li {\r\n\tborder-bottom: 1px solid #e0ded4 !important;\r\n\tpadding: 10px 15px 5px 0px !important;\r\n\tmargin: 0px !important;\r\n}\r\n\r\n\/* Dining: Menu Meal Tabs Active *\/\r\n.restaurant-menu ul li.vc_active {\r\n\tborder-bottom-color: #222 !important;\r\n}\r\n\r\n\/* Dining: Menu Meal Tabs Active Color *\/\r\n.restaurant-menu ul li.vc_active a {\r\n\tcolor: #222 !important;\r\n}\r\n\r\n\/* Dining: Menu Tabs Remove Transition *\/\r\n.wpb-js-composer .vc_tta.restaurant-menu .vc_tta-panel-body {\r\n\t-webkit-transition: none !important;\r\n\t-o-transition: none !important;\r\n\ttransition: none !important;\r\n\t-webkit-transform: none !important;\r\n\t-ms-transform: none !important;\r\n\ttransform: none !important;\r\n}\r\n\r\n\/* Dining: Menu Food Name *\/\r\n.food-list h3 {\r\n\tborder-bottom: 1px dotted #CCC;\r\n\tpadding-bottom: 10px;\r\n\tcolor: #000;\r\n}\r\n\r\n\/* Dining: Menu Food Price *\/\r\n.food-list del {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\ttext-decoration: none;\r\n\tcolor: #000;\r\n}\r\n\r\n\/* Dining: Menu Ingredients *\/\r\n.food-list p {\r\n\tpadding-right: 0;\r\n\tcolor: #888;\r\n}\r\n\r\n\/* Dining: Menu Reserve a Table Button *\/\r\n.vc_btn3:after {\r\n\tbackground-color: transparent !important;\r\n}\r\n\r\n\/* Dining: Menu Spacing *\/\r\n.menu-catalog {\r\n\tpadding: 0;\r\n\tpadding-top: 20px;\r\n}\r\n\r\n\/* Spa: Service Padding *\/\r\n.spa-services {\r\n  \tpadding: 40px 0;\r\n}\r\n\r\n\/* Spa: Menu Tabs Styling *\/\r\n.spa-menu-row {\r\n\tpadding: 50px 0;\r\n}\r\n\r\n\/* Spa: Title Divider Center *\/\r\n.spa-divider {\r\n\ttext-align: center !important;\r\n}\r\n\r\n\/* Spa: Title Divider Width *\/\r\n.spa-divider img {\r\n\twidth: 20%;\r\n}\r\n\r\n\/* Spa: Massage Menu Padding and Shadow *\/\r\n.spa-menu .vc_tta-panel-body {\r\n\tpadding: 25px 50px !important;\r\n\t-webkit-box-shadow: 0 5px 40px rgba(0, 0, 0, .15);\r\n\tbox-shadow: 0 5px 40px rgba(0, 0, 0, .15);\r\n}\r\n\r\n\/* Spa: Massage Menu Tabs *\/\r\n.spa-menu .vc_tta-tab {\r\n\tpadding-bottom: 0px !important;\r\n\tborder-bottom: none !important;\r\n\tpadding-right: 5px !important;\r\n}\r\n\r\n\/* Spa: Massage Menu Tabs *\/\r\n.spa-menu .vc_tta-tab a {\r\n\tpadding: 5px 20px !important;\r\n}\r\n\r\n\/* Spa: Types of Massage *\/\r\n.types-of-massage {\r\n\tpadding-top: 35px;\r\n}\r\n\r\n\/* Spa: Types of Massage Text Spacing *\/\r\n.types-of-massage h3 {\r\n\tline-height: 1.8;\r\n}\r\n\r\n\/* Spa: Types of Massage Icon Size *\/\r\n.types-of-massage h3 img {\r\n\twidth: 36px;\r\n\tmargin-right: 20px;\r\n\tfloat: left;\r\n}\r\n\r\n\/* Spa: Types of Massage Background *\/\r\n.massage-row {\r\n\tbackground-position: bottom right;\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-size: 30%;\r\n\tbackground-color: #fafafa;\r\n\tpadding: 50px 0;\r\n}\r\n\r\n\/* Activities: Sub Heading Letter Spacing *\/\r\n.sub-heading {\r\n\tletter-spacing: 5px;\r\n}\r\n\r\n\/* Activities: Separator Rotate *\/\r\n.separator-rotate {\r\n\t-webkit-transform: rotate(90deg);\r\n\t-ms-transform: rotate(90deg);\r\n\ttransform: rotate(90deg);\r\n}\r\n\r\n\/* Contact: Address Row *\/\r\n.contact-address-row {\r\n\tpadding-top: 70px;\r\n}\r\n\r\n\/* Contact: Adress Small Box Spacing *\/\r\n.contact-address-small-box {\r\n\tpadding-top: 20px;\r\n\tpadding-bottom: 30px;\r\n}\r\n\r\n\/* Contact: Address Spacing *\/\r\n.contact-address .vc_column-inner {\r\n\tmargin-top: 50px;\r\n\tmargin-right: -100px;\r\n\tpadding: 55px 130px 35px 55px;\r\n}\r\n\r\n\/* Contact: Form Border Color *\/\r\n.labeled-textarea-row textarea {\r\n\tbackground-image: -webkit-linear-gradient(#CCC 1px, transparent 1px);\r\n\tbackground-image: -o-linear-gradient(#CCC 1px, transparent 1px);\r\n\tbackground-image: linear-gradient(#CCC 1px, transparent 1px);\r\n}\r\n\r\n\/* Contact: Form Border Color *\/\r\n.labeled-input-row input {\r\n\tborder-bottom-color: #CCC;\r\n}\r\n\r\n\/* Contact: Small Title *\/\r\n.title-stylized {\r\n\tletter-spacing: 2px;\r\n\tmargin-bottom: 20px\r\n}\r\n\r\n\/* Contact: Small Title *\/\r\n.wpb_wrapper .lab-google-map.contact-page {\r\n\tmargin-bottom: 35px;\r\n\t-webkit-box-shadow: -20px 15px 90px rgba(0, 0, 0, 0.30);\r\n\tbox-shadow: -20px 15px 90px rgba(0, 0, 0, 0.30);\r\n\t-webkit-transition: all 0.3s;\r\n\t-o-transition: all 0.3s;\r\n\ttransition: all 0.3s;\r\n}\r\n\r\n\/* Footer: Container Width *\/\r\n@media (min-width: 1200px) {\r\n\tfooter .container {\r\n\t\twidth: 960px !important;\r\n\t}\r\n}\r\n\r\n\/* Footer: Background Color *\/\r\nfooter.site-footer {\r\n\tbackground: #222 !important;\r\n}\r\n\r\n\/* Footer: Top Padding *\/\r\nfooter.site-footer {\r\n\tpadding-top: 30px;\r\n}\r\n\r\n\/* Body: Large Screens bigger containers *\/\r\n@media (min-width: 1400px) {\r\n\t.container {\r\n\t\twidth: 1370px;\r\n\t\tmax-width: 1370px;\r\n\t}\r\n\t\r\n\t.vc-container .vc-parent-row.row-stretch_row>.vc_row,\r\n\t.vc-container .vc-parent-row.row-default {\r\n\t\twidth: 1370px;\r\n\t\tmax-width: 1370px;\r\n\t}\r\n}\r\n\r\n\/* Footer: Link Color on Hover *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu ul li a:hover {\r\n\tcolor: #FFF;\r\n}\r\n\r\n\/* Footer: Link Bottom Line *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu ul li a:after {\r\n\theight: 1px !important;\r\n\tdisplay: block;\r\n\tbackground: #c39a2c;\r\n\tcontent: \"\";\r\n\twidth: 0%;\r\n\tposition: absolute;\r\n\tmargin: 0 auto;\r\n\tleft: 0;\r\n\tright: 0;\r\n\t-webkit-transition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n\t-o-transition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n\ttransition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n\topacity: 0.5;\r\n}\r\n\r\n\/* Footer: Link Bottom Line on Hover *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu ul li a:hover:after {\r\n\twidth: 100%;\r\n\topacity: 1;\r\n}\r\n\r\n\/* Footer: Widget Bottom Margin *\/\r\n.widget-area.widgets--columned-layout>.widget {\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Footer: Widget Link Spacing *\/\r\n.site-footer.site-footer-inverted .footer-widgets .widget ul li {\r\n\tpadding: 2px 0;\r\n}\r\n\r\n\/* Footer: Widget Link Color *\/\r\n.site-footer.site-footer-inverted .footer-widgets .widget a {\r\n\tcolor: #999;\r\n}\r\n\r\n\/* Footer: Widget Title Letter Spacing *\/\r\n.site-footer .footer-widgets .widget .widgettitle {\r\n\tletter-spacing: 2px;\r\n}\r\n\r\n\/* Footer: Widget Padding *\/\r\n.site-footer .footer-widgets {\r\n\tmargin: 30px 0px;\r\n}\r\n\r\n\/* Footer: Awards *\/\r\n.footer-awards {\r\n\ttext-align: center;\r\n\tpadding: 0px;\r\n\tmargin-bottom: 40px;\r\n}\r\n\r\n\/* Footer: Awards Show Inline *\/\r\n.footer-awards li {\r\n\tdisplay: inline-block;\r\n\tlist-style-type: none;\r\n\tmargin-right: 20px;\r\n}\r\n\r\n\/* Footer: Awards Width *\/\r\n.footer-awards li img {\r\n\twidth: 64px;\r\n}\r\n\r\n\/* Footer: Bottom Line *\/\r\n.site-footer.site-footer-inverted hr {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Footer: Bottom Footer *\/\r\n.site-footer .footer-bottom-content {\r\n\tpadding-top: 20px;\r\n\tpadding-bottom: 20px;\r\n}\r\n\r\n\/* Footer: Bottom Footer Display Mode *\/\r\n.site-footer.footer-bottom-horizontal .footer-bottom-content {\r\n\tdisplay: block;\r\n}\r\n\r\n\/* Footer: Bottom Footer Full Width *\/\r\n.site-footer.footer-bottom-horizontal .footer-bottom-content .footer-content-right {\r\n\twidth: 100%;\r\n\tdisplay: block;\r\n}\r\n\r\n\/* Footer: Bottom Footer Center *\/\r\n.site-footer.footer-bottom-horizontal .footer-bottom-content .footer-content-left {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n}\r\n\r\n\/* Footer: Copyright Text Align *\/\r\n.site-footer.site-footer-inverted .footer-bottom-content .copyrights {\r\n\ttext-align: center;\r\n}\r\n\r\n\/* Footer: Copyright Color and Letter Spacing *\/\r\n.site-footer.site-footer-inverted .footer-bottom-content .copyrights p {\r\n\tletter-spacing: 4px;\r\n\tcolor: #999;\r\n}\r\n\r\n\/* Footer: Social Networks Top Margin *\/\r\n.site-footer.footer-bottom-horizontal .footer-bottom-content .social-networks {\r\n\tmargin-top: 0px;\r\n}\r\n\r\n\/* Footer: Social Networks Remove Background *\/\r\n.site-footer.footer-bottom-horizontal .footer-bottom-content .social-networks.rounded li a {\r\n\twidth: 35px;\r\n\theight: 35px;\r\n\tbackground: transparent !important;\r\n}\r\n\r\n\/* Footer: Social Networks Icon Color *\/\r\n.site-footer.footer-bottom-horizontal .footer-bottom-content .social-networks.rounded li a i {\r\n\tcolor: #999;\r\n}\r\n\r\n\/* Body: Large Screens *\/\r\n@media (min-width: 1600px) {\r\n\t.container {\r\n\t\twidth: 1570px;\r\n\t\tmax-width: 1570px;\r\n\t}\r\n\t.vc-container .vc-parent-row.row-stretch_row>.vc_row,\r\n\t.vc-container .vc-parent-row.row-default {\r\n\t\twidth: 1570px;\r\n\t\tmax-width: 1570px;\r\n\t}\r\n}\r\n\r\n\/* Footer: Link Transition *\/\r\n.site-footer .footer-widgets .widget.widget_nav_menu ul li a {\r\n\t-webkit-transition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n\t-o-transition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n\ttransition: all .2s cubic-bezier(0, 0, 0.16, 0.95);\r\n}\r\n\r\n\/* Go to Top button *\/\r\n.go-to-top {\r\n\tbackground-color: #c39a2c;\r\n}\r\n\/* ===========================================================\r\nCustom modification only for HOTEL Demo - END\r\n=========================================================== *\/\r\n\r\n\/* ===========================================================\r\nUser CSS modifications\r\n=========================================================== *\/\r\n.example {\r\n \tcolor: red !important;\r\n}","laborator_custom_css_lg":"","laborator_custom_css_md":"\/* Homepage: Reviews *\/\r\n.review-tabs {\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n\/* Accomodation: Title and Description Center *\/\r\n.portfolio-title-holder .pt-column.pt-column-title {\r\n\twidth: 100%;\r\n\tmax-width: 100%;\r\n}\r\n\r\n\r\n\/* General: Page Heading Width *\/\r\n.page-heading--title-section {\r\n\twidth: 100%;\r\n\tmax-width: 100%;\r\n}","laborator_custom_css_sm":"\/* Spa: Massage Menu Padding and Shadow *\/\r\n.spa-menu .vc_tta-panel-body {\r\n\tpadding: 10px 15px !important;\r\n}\r\n\r\n\/* Homepage: Reviews *\/\r\n.review-tabs {\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n\/* Accomodation: Title and Description Center *\/\r\n.portfolio-title-holder .pt-column.pt-column-title {\r\n\twidth: 100%;\r\n\tmax-width: 100%;\r\n}\r\n\r\n\r\n\/* General: Page Heading Width *\/\r\n.page-heading--title-section {\r\n\twidth: 100%;\r\n\tmax-width: 100%;\r\n}","laborator_custom_css_xs":"\/* General: Image Shadow *\/\r\n.image-shadow {\r\n\t-webkit-box-shadow: none;\r\n\tbox-shadow: none;\r\n}\r\n\r\n\/* General: Page Heading Width *\/\r\n.page-heading--title-section {\r\n\twidth: 100%;\r\n\tmax-width: 90%;\r\n}\r\n\r\n\/* General: Mobile Menu Trigger *\/\r\n.menu-bar .ham:after, \r\n.menu-bar .ham:before,\r\n.menu-bar .ham {\r\n  height: 1px;\r\n}\r\n\r\n\/* General: Mobile Menu Trigger *\/\r\n.menu-bar .ham:after {\r\n  top: 6px;\r\n}\r\n\r\n\/* General: Mobile Menu Trigger *\/\r\n.menu-bar .ham:before,\r\n.menu-bar .ham:after,\r\n.menu-bar .ham {\r\n  width: 30px;\r\n}\r\n\r\n\/* General: Mobile Menu Trigger *\/\r\n.menu-bar .ham:before {\r\n  top: -6px;\r\n}\r\n\r\n\/* General: Mobile Menu Trigger *\/\r\n.menu-bar.exit .ham:after {\r\n    -webkit-transform: translateY(-6px) rotateZ(45deg);\r\n    transform: translateY(-6px) rotateZ(45deg);\r\n}\r\n\r\n\/* General: Mobile Menu Trigger *\/\r\n.menu-bar.exit .ham:before {\r\n    -webkit-transform: translateY(6px) rotateZ(-45deg);\r\n    transform: translateY(6px) rotateZ(-45deg);\r\n}\r\n\r\n\/* General: Mobile Menu Search Icon *\/\r\n.mobile-menu-wrapper .mobile-menu-container .search-form input::placeholder,\r\n.mobile-menu-wrapper .mobile-menu-container .search-form label {\r\n\tcolor: rgba(255,255,255,0.75);\r\n}\r\n\r\n\/* General: Mobile Menu Background *\/\r\n.mobile-menu-wrapper.mobile-menu-fullscreen+.mobile-menu-overlay {\r\n    background-color: rgba(195, 154, 44, 0.95);\r\n}\r\n\r\n\/* General: Mobile Menu  *\/\r\n.mobile-menu-wrapper .mobile-menu-container div.menu>ul>li>a, .mobile-menu-wrapper .mobile-menu-container ul.menu>li>a {\r\n\tpadding: 5px 30px;\r\n}\r\n\r\n\/* Homepage: Intro Row Spacing *\/\r\n.homepage-intro {\r\n\tpadding: 30px 0 45px 0;\r\n}\r\n\r\n\/* Homepage: Service Icons *\/\r\n.service-icons {\r\n    padding-top: 0px;\r\n}\r\n\r\n\/* Homepage: Service Icons *\/\r\n.service-icons .vc_column_container {\r\n    margin-top: 35px;\r\n}\r\n\r\n\/* Homepage: Reviews *\/\r\n.homepage-reviews {\r\n\tpadding-top: 35px;\r\n}\r\n\r\n\/* Homepage: Reviews Width *\/\r\n.review-tabs {\r\n\twidth: 100%;\r\n}\r\n\r\n\/* Homepage: Reviews Naviation Bullets *\/\r\n.wpb-js-composer .vc_tta-tabs.vc_tta-has-pagination.review-tabs .vc_pagination {\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Homepage: Reviews Naviation Bullets *\/\r\n.wpb-js-composer .vc_tta-tabs.vc_tta-has-pagination.review-tabs:not(.vc_tta-tabs-position-bottom) {\r\n\tpadding-bottom: 35px;\t\r\n}\r\n\r\n\/* Homepage: Events Section Padding *\/\r\n.homepage-events {\r\n  \tpadding-top: 35px;\r\n  \tpadding-bottom: 30px;\r\n}\r\n\r\n\/* Homepage: Rooms Spacing *\/\r\n.homepage-rooms {\r\n  padding-top: 35px;\r\n}\r\n\r\n\/* Accomodation: Title and Description Center *\/\r\n.portfolio-title-holder .pt-column.pt-column-title {\r\n\twidth: 100%;\r\n\tmax-width: 90%;\r\n\tmargin-bottom: 40px;\r\n}\r\n\r\n\/* Dining: Welcome Spacing *\/\r\n.restaurant {\r\n\tpadding: 0;\r\n\tpadding-top: 25px;\r\n}\r\n\r\n\/* Dining: Second Row Spacing *\/\r\n.restaurant-row-2 {\r\n    padding: 0;\r\n}\r\n\r\n\/* Dining: Menu Spacing *\/\r\n.restaurant-menu {\r\n\tpadding-top: 15px;\r\n}\r\n\r\n\/* Dining: Menu Tabs Styling *\/\r\n.restaurant-menu .vc_tta-panel-heading h4 {\r\n    border-bottom: 1px dashed rgba(0,0,0,.1);\r\n\tfont-weight: 500;\r\n}\r\n\r\n\/* Dining: Tabs Side Spacing *\/\r\n.wpb-js-composer .vc_tta.vc_general.restaurant-menu .vc_tta-panel-title>a {\r\n\tpadding-left: 0px !important;\r\n\tpadding-right: 0px !important;\r\n}\r\n\r\n\/* Spa: Massage Menu Padding and Shadow *\/\r\n.spa-menu .vc_tta-panel-body {\r\n\tpadding: 25px 20px !important;\r\n\t-webkit-box-shadow: 0 5px 40px rgba(0, 0, 0, .15);\r\n\tbox-shadow: 0 5px 40px rgba(0, 0, 0, .15);\r\n}\r\n\r\n\/* Spa: Tabs Side Spacing *\/\r\n.wpb-js-composer .vc_tta.vc_general.restaurant-menu.spa-menu .vc_tta-panel-title>a {\r\n\tpadding-left: 20px !important;\r\n\tpadding-right: 20px !important;\r\n}\r\n\r\n\/* Spa: Menu Tabs Styling *\/\r\n.spa-menu .vc_tta-panel-heading h4 {\r\n    border-bottom: none;\t\r\n}\r\n\r\n\/* Spa: Menu Tabs Styling *\/\r\n.spa-menu-row {\r\n\tpadding: 15px 0;\r\n}\r\n\r\n\/* Spa: Service Padding *\/\r\n.spa-services {\r\n  \tpadding: 0px;\r\n}\r\n\r\n\/* Spa: Title Divider Width *\/\r\n.spa-divider img {\r\n\twidth: 60%;\r\n}\r\n\r\n\/* Spa: Types of Massage Background *\/\r\n.massage-row {\r\n\tpadding: 35px 0;\r\n}\r\n\r\n\/* Spa: Types of Massage *\/\r\n.types-of-massage {\r\n\tpadding-top: 0px;\r\n}\r\n\r\n\/* Events: Single Title Margin Bottom *\/\r\n.single-post .post .entry-header {\r\n  \tmargin-bottom: 15px;\r\n}\r\n\r\n\/* Events: Single Post Image Bottom Margin *\/\r\n.single-post .post-image {\r\n    margin-bottom: 25px;\r\n}\r\n\r\n\/* Events: Single Post Tags Bottom Margin *\/\r\n.post-meta-only {\r\n    margin-bottom: 25px;\r\n}\r\n\r\n\/* Events: Single Post Date and Category Margin Bottom *\/\r\n.single-post .post .post-meta-only .post-meta {\r\n\tmargin-bottom: 5px;\r\n}\r\n\r\n\/* Events: Single Image Caption *\/\r\n.post-formatting .wp-caption .wp-caption-text {\r\n    background: #EEE;\r\n}\r\n\r\n\/* Dining: Menu Tabs Top Spacing *\/\r\n.wpb-js-composer .vc_tta.restaurant-menu .vc_tta-panel-body {\r\n\tpadding-top: 0px !important;\r\n}\r\n\r\n\/* Contact: Address Spacing *\/\r\n.contact-address .vc_column-inner {\r\n  \tmargin-top: 0;\r\n \tmargin-right: 0;\r\n  \tpadding: 25px 15px 0 15px;\r\n}\r\n\r\n\/* Contact: Small Title *\/\r\n.wpb_wrapper .lab-google-map.contact-page {\r\n\tmargin-bottom: 0px;\r\n\t-webkit-box-shadow: none;\r\n\tbox-shadow: none;\r\n\t-webkit-transition: none;\r\n\t-o-transition: none;\r\n\ttransition: none;\r\n}\r\n\r\n\/* Contact: Map Full Width *\/\r\n.vc_col-sm-8 .vc_column-inner {\r\n  \tpadding: 0px;\r\n}\r\n\r\n\/* Contact: Button Full Width *\/\r\n.contact-form .button,\r\n.comment-form .button {\r\n\twidth: 100%;\r\n}\r\n\r\n\/* Contact: Adress Small Box Spacing *\/\r\n.contact-address-small-box {\r\n\tpadding-top: 0px;\r\n\tpadding-bottom: 35px;\r\n}\r\n\r\n\/* Contact: Adress Small Box Spacing *\/\r\n.contact-address-small-box .post-formatting {\r\n\tmargin-bottom: 0px;\t\r\n}\r\n\r\n\/* Contact: Address Row *\/\r\n.contact-address-row {\r\n\tpadding-top: 15px;\r\n}\r\n\r\n\/* Footer: Widget Bottom Margin *\/\r\n.widget-area.widgets--columned-layout.widgets--columns-5>.widget {\r\n\tmargin-bottom: 35px;\r\n}\r\n\r\n\/* Footer: Widget Padding *\/\r\n.site-footer .footer-widgets {\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Footer: 2 Widgets per Row *\/\r\n.widget-area.widgets--columned-layout.widgets--columns-5>.widget {\r\n\twidth: 50%;\r\n}\r\n\r\n\/* Footer: Awards Show Inline *\/\r\n.footer-awards li {\r\n\tmargin-right: 10px;\r\n\tmargin-left: 10px;\r\n}\r\n\r\n\/* Footer: Awards Width *\/\r\n.footer-awards li img {\r\n\twidth: 42px;\r\n}\r\n\r\n\/* Footer: Copyright Color and Letter Spacing *\/\r\n.site-footer.site-footer-inverted .footer-bottom-content .copyrights p {\r\n\tletter-spacing: 1px;\r\n}\r\n\r\n\/* Footer: Bottom Footer *\/\r\n.site-footer .footer-bottom-content {\r\n\tpadding-top: 0px;\r\n}","laborator_custom_css_less":"","laborator_custom_css_sass":""}